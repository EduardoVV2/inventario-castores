@page
@model Rush_Rh.Pages.InformacionComplementaria
@{
    Layout = "_LayoutUsuarioRH";
    ViewData["Title"] = "InformacionComplementaria";
}

@section Styles{
    <script src="~/css/informacionComplementaria.css"></script>
}


<div class="containerFormulario informacionComplementaria">
    <h1>Sistema RRHH / Registro de personal / Información Complementaria</h1> <br>
    <div class="d-flex justify-content-center mb-3 menuBotones" id="buttonMenu">
        <button class="button active" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
            Datos Personales
        </button>
        <button class="button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
            Datos Médicos
        </button>
        <button class="button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
            Idiomas
        </button>
        <button class="button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseFour" aria-expanded="false" aria-controls="collapseFour">
            Documentación de Ingreso
        </button>
        <button class="button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseFourFive" aria-expanded="false" aria-controls="collapseFourFive">
            Documentación del expediente
        </button>
        <button class="button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseFive" aria-expanded="false" aria-controls="collapseFive">
            Datos Académicos
        </button>
        <button class="button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseSix" aria-expanded="false" aria-controls="collapseSix">
            Experiencias Laborales
        </button>
        <button class="button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseSeven" aria-expanded="false" aria-controls="collapseSeven">
            Datos socieconomicos
        </button>
    </div>

    <div class="accordion" id="accordionExample">
        <!-- Datos Personales -->
        <div id="collapseOne" class="accordion-collapse collapse show" data-bs-parent="#accordionExample">
            <div class="accordion-body">
                <form asp-page-handler="GuardarDatosPersonales" method="post" id="formcollapseOne" enctype="multipart/form-data">
                    <div class="row">
                        <input type="hidden" name="idUsuarioActual" value="@Model.idUsuarioActual" />
                        <!-- Primera columna -->
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="documento" class="form-label">Foto de perfil(opcional):</label>
                                <!-- Con este input enviare el id en negativo (lo cambio con java) en caso de que sea editado-->
                                <input type="hidden" name="datosPersonales.IdDocumento.Id" id="documentoFotoPerfil_Id" value="@Model.Usuario.IdDocumento?.Id" />  <!--EL ID NO ME ESTA RETORNANDO -->
                                <input type="file" class="form-control" name="datosPersonales.IdDocumento.Archivo" id="documentoFotoPerfil" data-default-url="@Model.Usuario.IdDocumento?.URL" onchange="actualizarVistaPrevia(event)">
                                <div class="d-flex justify-content-between align-items-center">
                                    <a href="@Model.Usuario.IdDocumento?.URL" target="_blank" id="documento-actual">@(Model.Usuario.IdDocumento?.URL != null ? "Ver fotografia actual" : string.Empty) </a>

                                    @if (Model.Usuario.IdDocumento?.URL != null)
                                    {
                                        <input type="hidden" name="datosPersonales.IdDocumento.Eliminado" value="false" />
                                        <button type="button" class="btn botonEliminarDocumento" title="Eliminar Documento" id="botonEliminarDocumento" onclick="cambiarEstadoEliminado(event)"><span class="material-symbols-outlined remove-span">delete</span></button>
                                    }
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="pais">Pais:</label>
                                <select id="pais" name="direccion.Pais" required>
                                    <option value="" selected>Seleccione una opción</option>
                                    @foreach (var pais in Model.paises)
                                    {
                                        <option value="@pais.Id">@pais.Nombre</option>
                                    }
                                </select>
                            </div>
                            <input type="hidden" id="paisNombre" name="direccion.NombrePais" value="@(Model.Domicilio?.Pais ?? string.Empty)" />

                            <div class="form-group">
                                <label for="estado">Estado:</label>
                                <select id="estado" name="direccion.Estado" required>
                                    <option value="" selected>Seleccione una opción</option>
                                </select>
                            </div>
                            <input type="hidden" id="estadoNombre" name="direccion.NombreEstado" value="@(Model.Domicilio?.Estado ?? string.Empty)"/>

                            <div class="form-group">
                                <label for="municipio">Municipio:</label>
                                <select id="municipio" name="direccion.Municipio" required>
                                    <option value="" selected>Seleccione una opción</option>
                                </select>
                            </div>
                            <input type="hidden" id="municipioNombre" name="direccion.NombreMunicipio" value="@(Model.Domicilio?.Municipio ?? string.Empty)"/>

                            <div class="form-group">
                                <label for="colonia">Colonia:</label>
                                <select type="text" id="colonia" name="direccion.Colonia" required>
                                    <option value="" selected>Seleccione una opción</option>
                                </select>
                            </div>
                            <input type="hidden" id="coloniaNombre" name="direccion.NombreColonia" value="@(Model.Domicilio?.Colonia ?? string.Empty)"/>
                        </div>

                        <!-- Segunda columna -->
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="calle">Calle:</label>
                                <input type="text" id="calle" name="direccion.Calle" value="@(Model.Domicilio?.Calle ?? string.Empty)" required>
                            </div>
                            <div class="form-group">
                                <label for="numero">Número:</label>
                                <input type="number" id="numero" name="direccion.Numero" value="@(Model.Domicilio?.Numero ?? string.Empty)" required>
                            </div>
                            <div class="form-group">
                                <label for="telefono">Teléfono:</label>
                                <input type="tel" id="celular" name="datosPersonales.Celular" value="@(Model.Usuario?.Celular ?? string.Empty)" required>
                            </div>
                            <div class="form-group">
                                <label for="nss">NSS:</label>
                                <input type="number" id="nss" name="datosPersonales.NSS" value="@(Model.Usuario?.NSS ?? string.Empty)" required>
                            </div>
                            <div class="form-group">
                                <label for="correo">Correo Electrónico:</label>
                                <input type="email" id="correoElectronico" name="datosPersonales.CorreoElectronico" value="@(Model.Usuario?.CorreoElectronico ?? string.Empty)" required>
                            </div>
                        </div>
                    </div>
                    <div class="botonesDatosPersonales">
                        <button type="submit" class="button centrado envioSubmirButton">
                            <span class="material-symbols-outlined">save</span>Guardar 
                        </button>
                    </div>
                </form>
            </div>
        </div>



    <!-- Datos Médicos -->
    <div id="collapseTwo" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
        <div class="accordion-body">
            <form method="post" asp-page-handler="GuardarDatosMedicos" id="formcollapseTwo">
                <div class="row">
                    <!-- Primera columna -->
                    <input type="hidden" name="idUsuarioActual" value="@Model.idUsuarioActual" />

                    <div class="col-md-12">
                        <div class="form-group">
                            <label for="tipoSangre">Tipo de Sangre:</label>
                            <select name="datosMedicos.IdTipoSanguineo" id="tipoSangre" required>
                                <option value="" selected>Seleccione una opción</option>
                                @foreach (var tipoSangre in Model.tiposSangre)
                                {
                                    <option value="@tipoSangre.Id" selected="@(Model.Usuario?.IdTipoSanguineo == tipoSangre.Id)" >@tipoSangre.Nombre</option>
                                }
                            </select>
                        </div>

                        <div class="form-group">
                            <label for="consumeMedicamentos">¿Consume Medicamentos?</label>
                            <select name="datosMedicos.ConsumeMedicamentos" id="consumeMedicamentos" onchange="handleSelectChangeMedicamentos()" required>
                                <option value="" selected>Seleccione una opción</option>
                                <option value="true" selected="@(Model.Usuario?.ConsumeMedicamentos == true)">Si</option>
                                <option value="false" selected="@(Model.Usuario?.ConsumeMedicamentos == false)">No</option>
                            </select>
                        </div>
                        <div class="form-group" id="consumirMedicamentosContainer">
                            <label for="medicamentos">En caso de consumir medicamentos, ¿Cuáles?</label>
                            <textarea name="datosMedicos.DetalleMedicamentos" id="medicamentosCuales" rows="4" required>@(Model.Usuario?.DetalleMedicamentos ?? string.Empty)</textarea>
                        </div>
                        <div class="form-group">
                            <label for="alergias">¿Tiene alergias?</label>
                            <select name="datosMedicos.Alergias" id="alergias" onchange="handleSelectChangeAlergias()" required>
                                <option value="" selected>Seleccione una opción</option>
                                <option value="true" selected="@(Model.Usuario?.Alergia == true)">Si</option>
                                <option value="false" selected="@(Model.Usuario?.Alergia == false)">No</option>
                            </select>
                        </div>
                        <div class="form-group" id="hayAlergiasContainer">
                            <label for="alergias">En caso de tener alergias, ¿Cuáles?</label>
                            <textarea name="datosMedicos.DetalleAlergia" id="alergiasCuales" rows="4" required>@(Model.Usuario?.DetalleAlergia ?? string.Empty)</textarea>
                        </div>

                        <div class="form-group">
                            <label for="enfermedadCronica">¿Cuenta con alguna enfermedad crónica?</label>
                            <select name="datosMedicos.EnfermedadCronica" id="enfermedadCronica" onchange="handleSelectChangeEnfermedades()" required>
                                <option value="" selected>Seleccione una opción</option>
                                <option value="true" selected="@(Model.Usuario?.EnfermedadCronica == true)">Si</option>
                                <option value="false" selected="@(Model.Usuario?.EnfermedadCronica == false)">No</option>
                            </select>
                        </div>

                        <div class="form-group" id="enfermedadCronicaContainer">
                            <label for="enfermedadCronica">En caso de tener alguna enfermedad crónica, ¿Cuál?</label>
                            <textarea name="datosMedicos.DetalleEnfermedad" id="enfermedadCronicaCuales" rows="4" required>@(Model.Usuario?.DetalleEnfermedad ?? string.Empty)</textarea>
                        </div>

                        <div class="form-group">
                            <label for="frecuenciaMedica">¿Cuántas veces acude al médico en un periodo de 6 meses?</label>
                            <input type="number" id="frecuenciaMedica" name="datosMedicos.FrecuenciaMedica" value="@(Model.Usuario?.FrecuenciaMedica ?? null)" required>
                        </div>
                    </div>

                    <!-- Segunda columna -->
                    <div class="col-md-12 text-center">
                        <legend>
                            <h3>EN CASO DE EMERGENCIA</h3>
                        </legend>
                        <div class="form-group">
                            <label for="nombreContactoEmergencia">¿A quién se debe contactar?</label>
                            <input type="text" id="nombreContactoEmergencia" name="contactoEmergencia.Nombre" value="@(Model.Usuario?.NombreContactoEmergencia ?? string.Empty)" required>
                        </div>
                        <div class="form-group">
                            <label for="parentescoContactoEmergencia">Parentesco:</label>
                            <select id="parentescoContactoEmergencia" name="contactoEmergencia.IdParentesco" required>
                                <option value="" selected>Seleccione una opción</option>
                                @foreach (var parentesco in Model.parentescos)
                                {
                                    <option value="@parentesco.Id" selected="@(Model.Usuario?.IdParentesco == @parentesco.Id)">@parentesco.Nombre</option>
                                }
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="telefonoContactoEmergencia">Teléfono:</label>
                            <input type="tel" id="telefonoContactoEmergencia" name="contactoEmergencia.Telefono" value="@(Model.Usuario?.CelularContactoEmergencia ?? string.Empty)" required>
                        </div>
                    </div>
                </div>

                <div class="botonesDatosMedicos">
                    <button type="submit" class="button centrado envioSubmirButton">
                        <span class="material-symbols-outlined">save</span>Guardar
                    </button>
                </div>
            </form>
        </div>
    </div>



    <!-- Idiomas -->
    <div id="collapseThree" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
        <div class="accordion-body">
            <form id="formcollapseThree" method="post" asp-page-handler="AgregarIdioma">
                <div id="idiomasContainer" class="idiomasContainer">
                    <div id="sinIdiomas">
                        <p align="center">Sin idiomas</p>
                    </div>
                    <input type="hidden" name="idUsuarioActual" value="@Model.idUsuarioActual" />

                    @if (Model.idiomasRecuperados.Count > 0)
                    {
                        <input type="hidden" id="numeroIndice" value="@Model.idiomasRecuperados.Count" />
                    }
                    else
                    { //SI no hay idiomas recuperados, se inicializa el indice en 1 para que se puedan llenar los selects dinamicos creados con javascript
                        <input type="hidden" id="numeroIndice" value="1" />
                        <div class="form-group row mb-3 align-items-center idioma-row idiomasContainerPreguntas">
                        <input type="hidden" name="idiomas[0].Id" value="0" /> <!-- Los que tengan id 0 son los que se agregaron despues de la carga de la pagina, esos se guardan y los otros se actualizan -->
                            <div class="col-md-12">
                                <label for="idiomas_0_Nombre" class="form-label">Idioma:</label>
                                <input type="text" class="form-control" name="idiomas[0].Nombre" id="idiomas_0_Nombre" placeholder="Ejemplo: Inglés"  required>
                            </div>
                            <div class="col-md-12">
                                <label for="idiomas_0_NivelEscrito" class="form-label">Nivel escrito (%):</label>
                                <input type="number" class="form-control" name="idiomas[0].NivelEscrito" id="idiomas_0_NivelEscrito" min="0" max="100" placeholder="Ejemplo: 80" required>
                            </div>
                            <div class="col-md-12 #accordionExample">
                                <label for="idiomas_0_NivelHablado" class="form-label">Nivel hablado (%):</label>
                                <input type="number" class="form-control" name="idiomas[0].NivelHablado" id="idiomas_0_NivelHablado" min="0" max="100" placeholder="Ejemplo: 70" required>
                            </div>
                            <div class="col-md-2 contenedorBoton">
                                <button type="button" class="btn btn-danger remove-btn mt-4 botonEliminar"><span class="material-symbols-outlined remove-span">remove</span></button>
                            </div>
                        </div>
                    }

                    @{ 
                        var index = 0;
                    }
                    @foreach (var idiomaRecuperado in Model.idiomasRecuperados)
                    {
                        <div class="form-group row mb-3 align-items-center idioma-row idiomasContainerPreguntas">
                            <input type="hidden" name="idiomas[@index].Id" value="@idiomaRecuperado.Id" />
                            <div class="col-md-12">
                                <label for="idiomas_@(index)_Nombre" class="form-label">Idioma:</label>
                                <input type="text" class="form-control" name="idiomas[@index].Nombre" id="idiomas_@(index)_Nombre" placeholder="Ejemplo: Inglés" value="@idiomaRecuperado.Nombre" required>
                            </div>
                            <div class="col-md-12">
                                <label for="idiomas_@(index)_NivelEscrito" class="form-label">Nivel escrito (%):</label>
                                <input type="number" class="form-control" name="idiomas[@index].NivelEscrito" id="idiomas_@(index)_NivelEscrito" min="0" max="100" placeholder="Ejemplo: 80" value="@idiomaRecuperado.NivelEscrito" required>
                            </div>
                            <div class="col-md-12">
                                <label for="idiomas_@(index)_NivelHablado" class="form-label">Nivel hablado (%):</label>
                                <input type="number" class="form-control" name="idiomas[@index].NivelHablado" id="idiomas_@(index)_NivelHablado" min="0" max="100" placeholder="Ejemplo: 70" value="@idiomaRecuperado.NivelHablado" required>
                            </div>
                            <div class="col-md-2 contenedorBoton">
                                <button type="button" class="btn btn-danger remove-btn mt-4 botonEliminar"><span class="material-symbols-outlined remove-span">remove</span></button>
                            </div>
                        </div>
                        index++;
                    }


                </div>
                <div class="botonesIdiomas">
                    <button type="button" class="button centrado" id="addIdiomaBtn"><span class="material-symbols-outlined">add</span>Agregar otro idioma</button>
                    <button type="submit" class="button centrado envioSubmirButton"><span class="material-symbols-outlined">save</span>Guardar</button>
                </div>
            
            </form>
        </div>
    </div>



        <!-- Documentación -->
        <div id="collapseFour" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
            <div class="accordion-body">
                <form id="formcollapseFour" method="post" asp-page-handler="GuardarDocumentacion" enctype="multipart/form-data" >
                    <div class="row" id="filasDocumentos">
                        <input type="hidden" name="idUsuarioActual" value="@Model.idUsuarioActual" />
                        @{
                            bool CURP = false, RFC = false, ActaNacimiento = false, CartaSolicitudRegimenHonorarios = false, EstadoCuenta = false, ComprobanteEstudios = false, ComprobanteVigenciaDerechos = false, ComprobanteSitacionFiscal = false, INE = false, ComprobanteDomicilio = false, CV = false, SolicitudEmpleo = false, FolioBeca = false;
                            int numeroDocumentosRecuperados = Model.documentosRecuperados.Count, indice = 1;
                        } 
                            

                            @foreach (var documentoRecuperado in Model.documentosRecuperados)
                            {

                                @if (documentoRecuperado.IdTipoDocumento == 1){
                                    <div class="form-group">
                                        <label for="curp" class="form-label">CURP(opcional):</label>
                                        <!-- Con este input enviare el id en negativo (lo cambio con java) en caso de que sea editado-->
                                        <input type="hidden" name="documentacion.CURP.Id" id="curp_Id" value="@documentoRecuperado.Id" /> 
                                        <input type="file" class="form-control"  id="curp" name="documentacion.CURP.Archivo" data-allow-reorder="true" data-instant-upload="false" data-default-url="@(documentoRecuperado.URL ?? string.Empty)"  onchange="actualizarVistaPrevia(event)"> 
                                        <div class="d-flex justify-content-between align-items-center">
                                            <a href="@(documentoRecuperado.URL ?? string.Empty)" target="_blank" id="documento-actual">@(documentoRecuperado.URL != null ? "Ver documento actual" : string.Empty) </a>
                                            @if (documentoRecuperado.URL != null)
                                            {
                                                <input type="hidden" name="documentacion.CURP.Eliminado" value="false" />
                                                <button type="button" class="btn botonEliminarDocumento" title="Eliminar Documento" id="botonEliminarDocumento" onclick="cambiarEstadoEliminado(event)"><span class="material-symbols-outlined remove-span">delete</span></button>
                                            }
                                        </div>
                                    </div>
                                    CURP = true;
                                } else if (CURP == false && indice == (numeroDocumentosRecuperados)){ //ESta aparte ayuda a que si ya es el ultimo elemento de los que traamos y no hubo de este muestre el input vacio
                                    <div class="form-group">
                                        <input type="hidden" name="documentacion.CURP.Id" id="curp_Id" value="0" /> 
                                        <label for="curp" class="form-label">CURP(opcional):</label>
                                        <input type="file" class="form-control"  id="curp" name="documentacion.CURP.Archivo" data-allow-reorder="true" data-instant-upload="false" onchange="actualizarVistaPrevia(event)"> 
                                    </div>
                                }


                                @if (documentoRecuperado.IdTipoDocumento == 11){
                                    <div class="form-group">
                                        <label for="rfc" class="form-label">RFC(opcional):</label>
                                        <input type="hidden" name="documentacion.RFC.Id" id="rfc_Id" value="@documentoRecuperado.Id" />
                                        <input type="file" class="form-control" id="rfc" name="documentacion.RFC.Archivo" data-allow-reorder="true"data-instant-upload="false" data-default-url="@(documentoRecuperado.URL ?? string.Empty)"  onchange="actualizarVistaPrevia(event)"> 
                                        <div class="d-flex justify-content-between align-items-center">
                                            <a href="@(documentoRecuperado.URL ?? string.Empty)" target="_blank" id="documento-actual">@(documentoRecuperado.URL != null ? "Ver documento actual" : string.Empty) </a>
                                            @if (documentoRecuperado.URL != null)
                                            {
                                                <input type="hidden" name="documentacion.RFC.Eliminado" value="false" />
                                                <button type="button" class="btn botonEliminarDocumento" title="Eliminar Documento" id="botonEliminarDocumento" onclick="cambiarEstadoEliminado(event)"><span class="material-symbols-outlined remove-span">delete</span></button>
                                            }
                                        </div>
                                    </div>
                                    RFC = true;
                                } else if (RFC == false && indice == numeroDocumentosRecuperados){
                                    <div class="form-group">
                                        <input type="hidden" name="documentacion.RFC.Id" id="rfc_Id" value="0" /> 
                                        <label for="rfc" class="form-label">RFC(opcional):</label>
                                        <input type="file" class="form-control"  id="rfc" name="documentacion.RFC.Archivo" data-allow-reorder="true" data-instant-upload="false" onchange="actualizarVistaPrevia(event)"> 
                                    </div>
                                }


                                @if (documentoRecuperado.IdTipoDocumento == 8){
                                    <div class="form-group">
                                        <label for="actaNacimiento" class="form-label">Acta de Nacimiento(opcional):</label>
                                        <input type="hidden" name="documentacion.ActaNacimiento.Id" id="actaNacimiento_Id" value="@documentoRecuperado.Id" />
                                        <input type="file" class="form-control"  id="actaNacimiento" name="documentacion.ActaNacimiento.Archivo" data-allow-reorder="true" data-instant-upload="false" data-default-url="@(documentoRecuperado.URL ?? string.Empty)"  onchange="actualizarVistaPrevia(event)"> 
                                        <div class="d-flex justify-content-between align-items-center">
                                            <a href="@(documentoRecuperado.URL ?? string.Empty)" target="_blank" id="documento-actual">@(documentoRecuperado.URL != null ? "Ver documento actual" : string.Empty) </a>
                                            @if (documentoRecuperado.URL != null)
                                            {
                                                <input type="hidden" name="documentacion.ActaNacimiento.Eliminado" value="false" />
                                                <button type="button" class="btn botonEliminarDocumento" title="Eliminar Documento" id="botonEliminarDocumento" onclick="cambiarEstadoEliminado(event)"><span class="material-symbols-outlined remove-span">delete</span></button>
                                            }
                                        </div>
                                    </div>
                                    ActaNacimiento = true;
                                } else if (ActaNacimiento == false && indice == numeroDocumentosRecuperados){
                                    <div class="form-group">
                                        <input type="hidden" name="documentacion.ActaNacimiento.Id" id="actaNacimiento_Id" value="0" /> 
                                        <label for="actaNacimiento" class="form-label">Acta de Nacimiento(opcional):</label>
                                        <input type="file" class="form-control"  id="actaNacimiento" name="documentacion.ActaNacimiento.Archivo" data-allow-reorder="true" data-instant-upload="false" onchange="actualizarVistaPrevia(event)"> 
                                    </div>
                                }


                                @if (documentoRecuperado.IdTipoDocumento == 20){
                                    <div class="form-group">
                                        <label for="cartaSolicitudRegimenHonorarios" class="form-label">Carta de solicitud de régimen de honorarios asimilados a salarios(opcional):</label>
                                        <input type="hidden" name="documentacion.CartaSolicitudRegimenHonorarios.Id" id="cartaSolicitudRegimenHonorarios_Id" value="@documentoRecuperado.Id" /> 
                                        <input type="file" class="form-control"  id="cartaSolicitudRegimenHonorarios" name="documentacion.CartaSolicitudRegimenHonorarios.Archivo" data-allow-reorder="true" data-instant-upload="false" data-default-url="@(documentoRecuperado.URL ?? string.Empty)"  onchange="actualizarVistaPrevia(event)"> 
                                        <div class="d-flex justify-content-between align-items-center">
                                            <a href="@(documentoRecuperado.URL ?? string.Empty)" target="_blank" id="documento-actual">@(documentoRecuperado.URL != null ? "Ver documento actual" : string.Empty) </a>
                                            @if (documentoRecuperado.URL != null)
                                            {
                                                <input type="hidden" name="documentacion.CartaSolicitudRegimenHonorarios.Eliminado" value="false" />
                                                <button type="button" class="btn botonEliminarDocumento" title="Eliminar Documento" id="botonEliminarDocumento" onclick="cambiarEstadoEliminado(event)"><span class="material-symbols-outlined remove-span">delete</span></button>
                                            }
                                        </div>
                                    </div>
                                    CartaSolicitudRegimenHonorarios = true;
                                } else if (CartaSolicitudRegimenHonorarios == false && indice == (numeroDocumentosRecuperados)){
                                    <div class="form-group">
                                        <input type="hidden" name="documentacion.CartaSolicitudRegimenHonorarios.Id" id="cartaSolicitudRegimenHonorarios_Id" value="0" /> 
                                        <label for="cartaSolicitudRegimenHonorarios" class="form-label">Carta de solicitud de régimen de honorarios asimilados a salarios(opcional):</label>
                                        <input type="file" class="form-control"  id="cartaSolicitudRegimenHonorarios" name="documentacion.CartaSolicitudRegimenHonorarios.Archivo" data-allow-reorder="true" data-instant-upload="false" onchange="actualizarVistaPrevia(event)"> 
                                    </div>
                                }


                                @if (documentoRecuperado.IdTipoDocumento == 17){
                                    <div class="form-group">
                                        <label for="estadoCuenta" class="form-label">Estado de cuenta o contrato bancario(opcional):</label>
                                        <input type="hidden" name="documentacion.EstadoCuenta.Id" id="estadoCuenta_Id" value="@documentoRecuperado.Id" />
                                        <input type="file" class="form-control"  id="estadoCuenta" name="documentacion.EstadoCuenta.Archivo" data-allow-reorder="true" data-instant-upload="false" data-default-url="@(documentoRecuperado.URL ?? string.Empty)"  onchange="actualizarVistaPrevia(event)">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <a href="@(documentoRecuperado.URL ?? string.Empty)" target="_blank" id="documento-actual">@(documentoRecuperado.URL != null ? "Ver documento actual" : string.Empty) </a>
                                            @if (documentoRecuperado.URL != null)
                                            {
                                                <input type="hidden" name="documentacion.EstadoCuenta.Eliminado" value="false" />
                                                <button type="button" class="btn botonEliminarDocumento" title="Eliminar Documento" id="botonEliminarDocumento" onclick="cambiarEstadoEliminado(event)"><span class="material-symbols-outlined remove-span">delete</span></button>
                                            }
                                        </div>
                                    </div>
                                    EstadoCuenta = true;
                                } else if (EstadoCuenta == false && indice == (numeroDocumentosRecuperados)){
                                    <div class="form-group">
                                        <input type="hidden" name="documentacion.EstadoCuenta.Id" id="estadoCuenta_Id" value="0" /> 
                                        <label for="estadoCuenta" class="form-label">Estado de cuenta o contrato bancario(opcional):</label>
                                        <input type="file" class="form-control"  id="estadoCuenta" name="documentacion.EstadoCuenta.Archivo" data-allow-reorder="true" data-instant-upload="false" onchange="actualizarVistaPrevia(event)"> 
                                    </div>
                                }


                                @if (documentoRecuperado.IdTipoDocumento == 12){
                                    <div class="form-group">
                                        <label for="comprobanteEstudios" class="form-label">Comprobante de estudios(opcional):</label>
                                        <input type="hidden" name="documentacion.ComprobanteEstudios.Id" id="comprobanteEstudios_Id" value="@documentoRecuperado.Id" />
                                        <input type="file" class="form-control"  id="comprobanteEstudios" name="documentacion.ComprobanteEstudios.Archivo" data-allow-reorder="true" data-instant-upload="false" data-default-url="@(documentoRecuperado.URL ?? string.Empty)"  onchange="actualizarVistaPrevia(event)">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <a href="@(documentoRecuperado.URL ?? string.Empty)" target="_blank" id="documento-actual">@(documentoRecuperado.URL != null ? "Ver documento actual" : string.Empty) </a>
                                            @if (documentoRecuperado.URL != null)
                                            {
                                                <input type="hidden" name="documentacion.ComprobanteEstudios.Eliminado" value="false" />
                                                <button type="button" class="btn botonEliminarDocumento" title="Eliminar Documento" id="botonEliminarDocumento" onclick="cambiarEstadoEliminado(event)"><span class="material-symbols-outlined remove-span">delete</span></button>
                                            }
                                        </div>
                                    </div>
                                    ComprobanteEstudios = true;
                                } else if (ComprobanteEstudios == false && indice == (numeroDocumentosRecuperados)){
                                    <div class="form-group">
                                        <input type="hidden" name="documentacion.ComprobanteEstudios.Id" id="comprobanteEstudios_Id" value="0" /> 
                                        <label for="comprobanteEstudios" class="form-label">Comprobante de estudios(opcional):</label>
                                        <input type="file" class="form-control"  id="comprobanteEstudios" name="documentacion.ComprobanteEstudios.Archivo" data-allow-reorder="true" data-instant-upload="false" onchange="actualizarVistaPrevia(event)"> 
                                    </div>
                                }


                                @if (documentoRecuperado.IdTipoDocumento == 13){
                                    <div class="form-group">
                                        <label for="comprobanteVigenciaDerechos" class="form-label">Comprobante de vigencia de derechos(opcional):</label>
                                        <input type="hidden" name="documentacion.ComprobanteVigenciaDerechos.Id" id="comprobanteVigenciaDerechos_Id" value="@documentoRecuperado.Id" />
                                        <input type="file" class="form-control"  id="comprobanteVigenciaDerechos" name="documentacion.ComprobanteVigenciaDerechos.Archivo" data-allow-reorder="true" data-instant-upload="false" data-default-url="@(documentoRecuperado.URL ?? string.Empty)"  onchange="actualizarVistaPrevia(event)">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <a href="@(documentoRecuperado.URL ?? string.Empty)" target="_blank" id="documento-actual">@(documentoRecuperado.URL != null ? "Ver documento actual" : string.Empty) </a>
                                            @if (documentoRecuperado.URL != null)
                                            {
                                                <input type="hidden" name="documentacion.ComprobanteVigenciaDerechos.Eliminado" value="false" />
                                                <button type="button" class="btn botonEliminarDocumento" title="Eliminar Documento" id="botonEliminarDocumento" onclick="cambiarEstadoEliminado(event)"><span class="material-symbols-outlined remove-span">delete</span></button>
                                            }
                                        </div>
                                    </div>
                                    ComprobanteVigenciaDerechos = true;
                                } else if (ComprobanteVigenciaDerechos == false && indice == (numeroDocumentosRecuperados)){
                                    <div class="form-group">
                                        <input type="hidden" name="documentacion.ComprobanteVigenciaDerechos.Id" id="comprobanteVigenciaDerechos_Id" value="0" /> 
                                        <label for="comprobanteVigenciaDerechos" class="form-label">Comprobante de vigencia de derechos(opcional):</label>
                                        <input type="file" class="form-control"  id="comprobanteVigenciaDerechos" name="documentacion.ComprobanteVigenciaDerechos.Archivo" data-allow-reorder="true" data-instant-upload="false" onchange="actualizarVistaPrevia(event)"> 
                                    </div>
                                }

                                @if (documentoRecuperado.IdTipoDocumento == 10){
                                    <div class="form-group">
                                        <label for="cartaSituacionFiscal" class="form-label">Constancia de situación fiscal(opcional): </label>
                                        <input type="hidden" name="documentacion.ComprobanteSitacionFiscal.Id" id="cartaSituacionFiscal_Id" value="@documentoRecuperado.Id" />
                                        <input type="file" class="form-control"  id="cartaSituacionFiscal" name="documentacion.ComprobanteSitacionFiscal.Archivo" data-allow-reorder="true" data-instant-upload="false" data-default-url="@(documentoRecuperado.URL ?? string.Empty)"  onchange="actualizarVistaPrevia(event)">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <a href="@(documentoRecuperado.URL ?? string.Empty)" target="_blank" id="documento-actual">@(documentoRecuperado.URL != null ? "Ver documento actual" : string.Empty) </a>
                                            @if (documentoRecuperado.URL != null)
                                            {
                                                <input type="hidden" name="documentacion.ComprobanteSitacionFiscal.Eliminado" value="false" />
                                                <button type="button" class="btn botonEliminarDocumento" title="Eliminar Documento" id="botonEliminarDocumento" onclick="cambiarEstadoEliminado(event)"><span class="material-symbols-outlined remove-span">delete</span></button>
                                            }
                                        </div>
                                    </div>
                                    ComprobanteSitacionFiscal = true;
                                } else if (ComprobanteSitacionFiscal == false && indice == (numeroDocumentosRecuperados)){
                                    <div class="form-group">
                                        <input type="hidden" name="documentacion.ComprobanteSitacionFiscal.Id" id="cartaSituacionFiscal_Id" value="0" /> 
                                        <label for="cartaSituacionFiscal" class="form-label">Constancia de situación fiscal(opcional): </label>
                                        <input type="file" class="form-control"  id="cartaSituacionFiscal" name="documentacion.ComprobanteSitacionFiscal.Archivo" data-allow-reorder="true" data-instant-upload="false" onchange="actualizarVistaPrevia(event)"> 
                                    </div>
                                }


                                @if (documentoRecuperado.IdTipoDocumento == 9){
                                    <div class="form-group">    
                                        <label for="INE" class="form-label">INE(opcional)</label>
                                        <input type="hidden" name="documentacion.INE.Id" id="INE_Id" value="@documentoRecuperado.Id" />
                                        <input type="file" class="form-control"  id="INE" name="documentacion.INE.Archivo" data-allow-reorder="true" data-instant-upload="false" data-default-url="@(documentoRecuperado.URL ?? string.Empty)"  onchange="actualizarVistaPrevia(event)">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <a href="@(documentoRecuperado.URL ?? string.Empty)" target="_blank" id="documento-actual">@(documentoRecuperado.URL != null ? "Ver documento actual" : string.Empty) </a>
                                            @if (documentoRecuperado.URL != null)
                                            {
                                                <input type="hidden" name="documentacion.INE.Eliminado" value="false" />
                                                <button type="button" class="btn botonEliminarDocumento" title="Eliminar Documento" id="botonEliminarDocumento" onclick="cambiarEstadoEliminado(event)"><span class="material-symbols-outlined remove-span">delete</span></button>
                                            }
                                        </div>
                                    </div>
                                    INE = true;                             
                                } else if (INE == false && indice == (numeroDocumentosRecuperados)){
                                    <div class="form-group">
                                        <input type="hidden" name="documentacion.INE.Id" id="INE_Id" value="0" /> 
                                        <label for="INE" class="form-label">INE(opcional)</label>
                                        <input type="file" class="form-control"  id="INE" name="documentacion.INE.Archivo" data-allow-reorder="true" data-instant-upload="false" onchange="actualizarVistaPrevia(event)"> 
                                    </div>
                                }


                                @if (documentoRecuperado.IdTipoDocumento == 14){
                                    <div class="form-group">
                                        <label for="comprobanteDomicilio" class="form-label">Comprobante de Domicilio(opcional):</label>
                                        <input type="hidden" name="documentacion.ComprobanteDomicilio.Id" id="comprobanteDomicilio_Id" value="@documentoRecuperado.Id" />
                                        <input type="file" class="form-control"  id="comprobanteDomicilio" name="documentacion.ComprobanteDomicilio.Archivo" data-allow-reorder="true" data-instant-upload="false" data-default-url="@(documentoRecuperado.URL ?? string.Empty)"  onchange="actualizarVistaPrevia(event)">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <a href="@(documentoRecuperado.URL ?? string.Empty)" target="_blank" id="documento-actual">@(documentoRecuperado.URL != null ? "Ver documento actual" : string.Empty) </a>
                                            @if (documentoRecuperado.URL != null)
                                            {
                                                <input type="hidden" name="documentacion.ComprobanteDomicilio.Eliminado" value="false" />
                                                <button type="button" class="btn botonEliminarDocumento" title="Eliminar Documento" id="botonEliminarDocumento" onclick="cambiarEstadoEliminado(event)"><span class="material-symbols-outlined remove-span">delete</span></button>
                                            }
                                        </div>
                                    </div>
                                    ComprobanteDomicilio = true;
                                } else if (ComprobanteDomicilio == false && indice == (numeroDocumentosRecuperados)){
                                    <div class="form-group">
                                        <input type="hidden" name="documentacion.ComprobanteDomicilio.Id" id="comprobanteDomicilio_Id" value="0" /> 
                                        <label for="comprobanteDomicilio" class="form-label">Comprobante de Domicilio(opcional):</label>
                                        <input type="file" class="form-control"  id="comprobanteDomicilio" name="documentacion.ComprobanteDomicilio.Archivo" data-allow-reorder="true" data-instant-upload="false" onchange="actualizarVistaPrevia(event)"> 
                                    </div>
                                }


                                @if (documentoRecuperado.IdTipoDocumento == 15){
                                    <div class="form-group">
                                        <label for="cv" class="form-label">CV(opcional):</label>
                                        <input type="hidden" name="documentacion.CV.Id" id="cv_Id" value="@documentoRecuperado.Id" />
                                        <input type="file" class="form-control"  id="cv" name="documentacion.CV.Archivo" data-allow-reorder="true" data-instant-upload="false" data-default-url="@(documentoRecuperado.URL ?? string.Empty)"  onchange="actualizarVistaPrevia(event)">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <a href="@(documentoRecuperado.URL ?? string.Empty)" target="_blank" id="documento-actual">@(documentoRecuperado.URL != null ? "Ver documento actual" : string.Empty) </a>
                                            @if (documentoRecuperado.URL != null)
                                            {
                                                <input type="hidden" name="documentacion.CV.Eliminado" value="false" />
                                                <button type="button" class="btn botonEliminarDocumento" title="Eliminar Documento" id="botonEliminarDocumento" onclick="cambiarEstadoEliminado(event)"><span class="material-symbols-outlined remove-span">delete</span></button>
                                            }
                                        </div>
                                    </div>
                                    CV = true;
                                } else if (CV == false && indice == (numeroDocumentosRecuperados)){
                                    <div class="form-group">
                                        <input type="hidden" name="documentacion.CV.Id" id="cv_Id" value="0" /> 
                                        <label for="cv" class="form-label">CV(opcional):</label>
                                        <input type="file" class="form-control"  id="cv" name="documentacion.CV.Archivo" data-allow-reorder="true" data-instant-upload="false" onchange="actualizarVistaPrevia(event)"> 
                                    </div>
                                }


                                @if (documentoRecuperado.IdTipoDocumento == 16){
                                    <div class="form-group">
                                        <label for="solicitudEmpleo" class="form-label">Solicitud de Empleo(opcional):</label>
                                        <input type="hidden" name="documentacion.SolicitudEmpleo.Id" id="solicitudEmpleo_Id" value="@documentoRecuperado.Id" />
                                        <input type="file" class="form-control"  id="solicitudEmpleo" name="documentacion.SolicitudEmpleo.Archivo" data-allow-reorder="true" data-instant-upload="false" data-default-url="@(documentoRecuperado.URL ?? string.Empty)"  onchange="actualizarVistaPrevia(event)">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <a href="@(documentoRecuperado.URL ?? string.Empty)" target="_blank" id="documento-actual">@(documentoRecuperado.URL != null ? "Ver documento actual" : string.Empty) </a>
                                            @if (documentoRecuperado.URL != null)
                                            {
                                                <input type="hidden" name="documentacion.SolicitudEmpleo.Eliminado" value="false" />
                                                <button type="button" class="btn botonEliminarDocumento" title="Eliminar Documento" id="botonEliminarDocumento" onclick="cambiarEstadoEliminado(event)"><span class="material-symbols-outlined remove-span">delete</span></button>
                                            }
                                        </div>
                                    </div>
                                    SolicitudEmpleo = true;
                                } else if (SolicitudEmpleo == false && indice == (numeroDocumentosRecuperados)){
                                    <div class="form-group">
                                        <input type="hidden" name="documentacion.SolicitudEmpleo.Id" id="solicitudEmpleo_Id" value="0" /> 
                                        <label for="solicitudEmpleo" class="form-label">Solicitud de Empleo(opcional):</label>
                                        <input type="file" class="form-control"  id="solicitudEmpleo" name="documentacion.SolicitudEmpleo.Archivo" data-allow-reorder="true" data-instant-upload="false" onchange="actualizarVistaPrevia(event)">
                                    </div>
                                }


                                @if (documentoRecuperado.IdTipoDocumento == 33){
                                    <div class="form-group">
                                        <label for="folioBeca" class="form-label">Folio Beca Jóvenes Construyendo el Futuro(opcional):</label>
                                        <input type="hidden" name="documentacion.FolioBeca.Id" id="folioBeca_Id" value="@documentoRecuperado.Id" />
                                        <input type="file" class="form-control"  id="folioBeca" name="documentacion.FolioBeca.Archivo" data-allow-reorder="true" data-instant-upload="false" data-default-url="@(documentoRecuperado.URL ?? string.Empty)"  onchange="actualizarVistaPrevia(event)">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <a href="@(documentoRecuperado.URL ?? string.Empty)" target="_blank" id="documento-actual">@(documentoRecuperado.URL != null ? "Ver documento actual" : string.Empty) </a>
                                            @if (documentoRecuperado.URL != null)
                                            {
                                                <input type="hidden" name="documentacion.FolioBeca.Eliminado" value="false" />
                                                <button type="button" class="btn botonEliminarDocumento" title="Eliminar Documento" id="botonEliminarDocumento" onclick="cambiarEstadoEliminado(event)"><span class="material-symbols-outlined remove-span">delete</span></button>
                                            }
                                        </div>
                                    </div>
                                    FolioBeca = true;
                                } else if (FolioBeca == false && indice == (numeroDocumentosRecuperados)){
                                    <div class="form-group">
                                        <input type="hidden" name="documentacion.FolioBeca.Id" id="folioBeca_Id" value="0" /> 
                                        <label for="folioBeca" class="form-label">Folio Beca Jóvenes Construyendo el Futuro(opcional):</label>
                                        <input type="file" class="form-control"  id="folioBeca" name="documentacion.FolioBeca.Archivo" data-allow-reorder="true" data-instant-upload="false" onchange="actualizarVistaPrevia(event)"> 
                                    </div>
                                }
                                
                                indice++;
                            }
                        
                                

                    </div>

                    <div class="botonesDocumentacion">
                        <button type="submit" class="button centrado envioSubmirButton">
                            <span class="material-symbols-outlined ">save</span>Guardar
                        </button>
                    </div>
                </form>
            </div>
        </div>




        <!--Creando documentacion extra con la logica de documentacion -->
        <!-- Documentación extra-->
        <div id="collapseFourFive" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
            <div class="accordion-body">
                <form id="formcollapseFourFive" method="post" asp-page-handler="GuardarDocumentacionExpediente" enctype="multipart/form-data" >
                    <div class="row" id="filasDocumentos">

                        <input type="hidden" name="idUsuarioActual" value="@Model.idUsuarioActual" />
                        @{
                            bool contratoPrestacionServicios = false, formularioIngreso = false, formatoInformacionGeneral = false, constanciaCursosTalleres = false, justificacionPermiso = false, formatoReclutamiento = false, contratoConfidencialidad = false, formatoEvaluacionCompetencias = false, pruebasPsicometricas = false, formatoActasAdministrativas = false;   
                            int numeroDocumentosExtraRecuperados = Model.documentosRecuperados.Count, indiceExtra = 1, indiceEnvio = 0;
                        } 


                        @foreach (var documentoRecuperado in Model.documentosRecuperados)
                        {
                            if (documentoRecuperado.IdTipoDocumento == 21){ 
                        
                                <div class="form-group">
                                    <label for="contratoPrestacionServicios" class="form-label">Contrato de prestación de servicios(opcional):</label>
                                    <input type="hidden" name="documentacionExpediente.ContratoPrestacionServicios.Id" id="contratoPrestacionServicios_Id" value="@documentoRecuperado.Id" />
                                    <input type="file" class="form-control"  id="contratoPrestacionServicios" name="documentacionExpediente.ContratoPrestacionServicios.Archivo" data-allow-reorder="true" data-instant-upload="false" data-default-url="@(documentoRecuperado.URL ?? string.Empty)"  onchange="actualizarVistaPrevia(event)">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <a href="@(documentoRecuperado.URL ?? string.Empty)" target="_blank" id="documento-actual">@(documentoRecuperado.URL != null ? "Ver documento actual" : string.Empty) </a>
                                        @if (documentoRecuperado.URL != null)
                                        {
                                            <input type="hidden" name="documentacionExpediente.ContratoPrestacionServicios.Eliminado" value="false" />
                                            <button type="button" class="btn botonEliminarDocumento" title="Eliminar Documento" id="botonEliminarDocumento" onclick="cambiarEstadoEliminado(event)"><span class="material-symbols-outlined remove-span">delete</span></button>
                                        }
                                    </div>
                                </div>
                                contratoPrestacionServicios = true;
                            } else if (contratoPrestacionServicios == false && indiceExtra == (numeroDocumentosExtraRecuperados)){
                                <div class="form-group">                                  
                                    <input type="hidden" name="documentacionExpediente.ContratoPrestacionServicios.Id" id="contratoPrestacionServicios_Id" value="0" /> 
                                    <label for="contratoPrestacionServicios" class="form-label">Contrato de prestación de servicios(opcional):</label>
                                    <input type="file" class="form-control"  id="contratoPrestacionServicios" name="documentacionExpediente.ContratoPrestacionServicios.Archivo" data-allow-reorder="true" data-instant-upload="false" onchange="actualizarVistaPrevia(event)">
                                </div>
                            }


                            if (documentoRecuperado.IdTipoDocumento == 22){
                                <div class="form-group">
                                    <label for="formularioIngreso" class="form-label">Formulario de ingreso(opcional):</label>
                                    <input type="hidden" name="documentacionExpediente.FormularioIngreso.Id" id="formularioIngreso_Id" value="@documentoRecuperado.Id" />
                                    <input type="file" class="form-control"  id="formularioIngreso" name="documentacionExpediente.FormularioIngreso.Archivo" data-allow-reorder="true" data-instant-upload="false" data-default-url="@(documentoRecuperado.URL ?? string.Empty)"  onchange="actualizarVistaPrevia(event)">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <a href="@(documentoRecuperado.URL ?? string.Empty)" target="_blank" id="documento-actual">@(documentoRecuperado.URL != null ? "Ver documento actual" : string.Empty) </a>
                                        @if (documentoRecuperado.URL != null)
                                        {
                                            <input type="hidden" name="documentacionExpediente.FormularioIngreso.Eliminado" value="false" />
                                            <button type="button" class="btn botonEliminarDocumento" title="Eliminar Documento" id="botonEliminarDocumento" onclick="cambiarEstadoEliminado(event)"><span class="material-symbols-outlined remove-span">delete</span></button>
                                        }
                                    </div>
                                </div>                
                                formularioIngreso = true;
                            } else if (formularioIngreso == false && indiceExtra == (numeroDocumentosExtraRecuperados)){
                                <div class="form-group">
                                    <input type="hidden" name="documentacionExpediente.FormularioIngreso.Id" id="formularioIngreso_Id" value="0" /> 
                                    <label for="formularioIngreso" class="form-label">Formulario de ingreso(opcional):</label>
                                    <input type="file" class="form-control"  id="formularioIngreso" name="documentacionExpediente.FormularioIngreso.Archivo" data-allow-reorder="true" data-instant-upload="false" onchange="actualizarVistaPrevia(event)">
                                </div>
                            }

                            if (documentoRecuperado.IdTipoDocumento == 23){
                                <div class="form-group">                  
                                    <label for="formatoInformacionGeneral" class="form-label">Formato de información general(opcional):</label>
                                    <input type="hidden" name="documentacionExpediente.FormatoInformacionGeneral.Id" id="formatoInformacionGeneral_Id" value="@documentoRecuperado.Id" />
                                    <input type="file" class="form-control"  id="formatoInformacionGeneral" name="documentacionExpediente.FormatoInformacionGeneral.Archivo" data-allow-reorder="true" data-instant-upload="false" data-default-url="@(documentoRecuperado.URL ?? string.Empty)"  onchange="actualizarVistaPrevia(event)">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <a href="@(documentoRecuperado.URL ?? string.Empty)" target="_blank" id="documento-actual">@(documentoRecuperado.URL != null ? "Ver documento actual" : string.Empty) </a>
                                        @if (documentoRecuperado.URL != null)
                                        {
                                            <input type="hidden" name="documentacionExpediente.FormatoInformacionGeneral.Eliminado" value="false" />
                                            <button type="button" class="btn botonEliminarDocumento" title="Eliminar Documento" id="botonEliminarDocumento" onclick="cambiarEstadoEliminado(event)"><span class="material-symbols-outlined remove-span">delete</span></button>
                                        }
                                    </div>
                                </div>
                                formatoInformacionGeneral = true;
                            } else if (formatoInformacionGeneral == false && indiceExtra == (numeroDocumentosExtraRecuperados)){                               
                                <div class="form-group">     
                                    <input type="hidden" name="documentacionExpediente.FormatoInformacionGeneral.Id" id="formatoInformacionGeneral_Id" value="0" /> 
                                    <label for="formatoInformacionGeneral" class="form-label">Formato de información general(opcional):</label>
                                    <input type="file" class="form-control"  id="formatoInformacionGeneral" name="documentacionExpediente.FormatoInformacionGeneral.Archivo" data-allow-reorder="true" data-instant-upload="false" onchange="actualizarVistaPrevia(event)">
                                </div>
                            }


                            if (documentoRecuperado.IdTipoDocumento == 24){
                                <div class="form-group">                                                                                   
                                    <label for="formatoReclutamiento" class="form-label">Formato de reclutamiento(opcional)</label>
                                    <input type="hidden" name="documentacionExpediente.FormatoReclutamiento.Id" id="formatoReclutamiento_Id" value="@documentoRecuperado.Id" />
                                    <input type="file" class="form-control"  id="formatoReclutamiento" name="documentacionExpediente.FormatoReclutamiento.Archivo" data-allow-reorder="true" data-instant-upload="false" data-default-url="@(documentoRecuperado.URL ?? string.Empty)"  onchange="actualizarVistaPrevia(event)">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <a href="@(documentoRecuperado.URL ?? string.Empty)" target="_blank" id="documento-actual">@(documentoRecuperado.URL != null ? "Ver documento actual" : string.Empty) </a>
                                        @if (documentoRecuperado.URL != null)
                                        {
                                            <input type="hidden" name="documentacionExpediente.FormatoReclutamiento.Eliminado" value="false" />
                                            <button type="button" class="btn botonEliminarDocumento" title="Eliminar Documento" id="botonEliminarDocumento" onclick="cambiarEstadoEliminado(event)"><span class="material-symbols-outlined remove-span">delete</span></button>
                                        }
                                    </div>
                                </div>
                                formatoReclutamiento = true;
                            } else if (formatoReclutamiento == false && indiceExtra == (numeroDocumentosExtraRecuperados)){
                                 <div class="form-group">                                   
                                    <input type="hidden" name="documentacionExpediente.FormatoReclutamiento.Id" id="formatoReclutamiento_Id" value="0" /> 
                                    <label for="formatoReclutamiento" class="form-label">Formato de reclutamiento(opcional)</label>
                                    <input type="file" class="form-control"  id="formatoReclutamiento" name="documentacionExpediente.FormatoReclutamiento.Archivo" data-allow-reorder="true" data-instant-upload="false" onchange="actualizarVistaPrevia(event)">
                                 </div>
                            }

                            if (documentoRecuperado.IdTipoDocumento == 25){
                                <div class="form-group">                                                                      
                                    <label for="contratoConfidencialidad" class="form-label">Contrato de confidencialidad(opcional):</label>
                                    <input type="hidden" name="documentacionExpediente.ContratoConfidencialidad.Id" id="contratoConfidencialidad_Id" value="@documentoRecuperado.Id" />
                                    <input type="file" class="form-control"  id="contratoConfidencialidad" name="documentacionExpediente.ContratoConfidencialidad.Archivo" data-allow-reorder="true" data-instant-upload="false" data-default-url="@(documentoRecuperado.URL ?? string.Empty)"  onchange="actualizarVistaPrevia(event)">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <a href="@(documentoRecuperado.URL ?? string.Empty)" target="_blank" id="documento-actual">@(documentoRecuperado.URL != null ? "Ver documento actual" : string.Empty) </a>
                                        @if (documentoRecuperado.URL != null)
                                        {
                                            <input type="hidden" name="documentacionExpediente.ContratoConfidencialidad.Eliminado" value="false" />
                                            <button type="button" class="btn botonEliminarDocumento" title="Eliminar Documento" id="botonEliminarDocumento" onclick="cambiarEstadoEliminado(event)"><span class="material-symbols-outlined remove-span">delete</span></button>
                                        }
                                    </div>
                                </div>
                                contratoConfidencialidad = true;
                            } else if (contratoConfidencialidad == false && indiceExtra == (numeroDocumentosExtraRecuperados)){
                                 <div class="form-group">                        
                                        <input type="hidden" name="documentacionExpediente.ContratoConfidencialidad.Id" id="contratoConfidencialidad_Id" value="0" /> 
                                        <label for="contratoConfidencialidad" class="form-label">Contrato de confidencialidad(opcional):</label>
                                        <input type="file" class="form-control"  id="contratoConfidencialidad" name="documentacionExpediente.ContratoConfidencialidad.Archivo" data-allow-reorder="true" data-instant-upload="false" onchange="actualizarVistaPrevia(event)">
                                 </div>
                            }

                            if(documentoRecuperado.IdTipoDocumento == 26){
                                <div class="form-group">
                                    <label for="formatoEvaluacionCompetencias" class="form-label">Formato de evaluación de competencias(opcional):</label>
                                    <input type="hidden" name="documentacionExpediente.EvaluacionCompetencias.Id" id="formatoEvaluacionCompetencias_Id" value="@documentoRecuperado.Id" />
                                    <input type="file" class="form-control"  id="formatoEvaluacionCompetencias" name="documentacionExpediente.EvaluacionCompetencias.Archivo" data-allow-reorder="true" data-instant-upload="false" data-default-url="@(documentoRecuperado.URL ?? string.Empty)"  onchange="actualizarVistaPrevia(event)">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <a href="@(documentoRecuperado.URL ?? string.Empty)" target="_blank" id="documento-actual">@(documentoRecuperado.URL != null ? "Ver documento actual" : string.Empty) </a>
                                        @if (documentoRecuperado.URL != null)
                                        {
                                            <input type="hidden" name="documentacionExpediente.EvaluacionCompetencias.Eliminado" value="false" />
                                            <button type="button" class="btn botonEliminarDocumento" title="Eliminar Documento" id="botonEliminarDocumento" onclick="cambiarEstadoEliminado(event)"><span class="material-symbols-outlined remove-span">delete</span></button>
                                        }
                                    </div>
                                </div>
                                formatoEvaluacionCompetencias = true;
                            } else if (formatoEvaluacionCompetencias == false && indiceExtra == (numeroDocumentosExtraRecuperados)){
                                <div class="form-group">
                                    <input type="hidden" name="documentacionExpediente.EvaluacionCompetencias.Id" id="formatoEvaluacionCompetencias_Id" value="0" /> 
                                    <label for="formatoEvaluacionCompetencias" class="form-label">Formato de evaluación de competencias(opcional):</label>
                                    <input type="file" class="form-control"  id="formatoEvaluacionCompetencias" name="documentacionExpediente.EvaluacionCompetencias.Archivo" data-allow-reorder="true" data-instant-upload="false" onchange="actualizarVistaPrevia(event)">
                                </div>
                            }

                            indiceExtra++;
                        }


                        @{indiceExtra = 1;}


                        <div class="form-group" >                                
                        @foreach (var documentoRecuperado in Model.documentosRecuperados)
                        {
                            if (documentoRecuperado.IdTipoDocumento == 29){  
                                if(justificacionPermiso == false){
                                    <label for="justificacionPermiso[@(indiceEnvio)]" class="form-label">Justificación de permiso(opcional-multiple):</label>
                                    <input type="hidden" name="documentacionExpediente.JustificacionPermiso[@(indiceEnvio)].Id" id="justificacionPermiso[@(indiceEnvio)]_Id" value="@documentoRecuperado.Id" />
                                    <input type="file" class="form-control"  id="justificacionPermiso[@(indiceEnvio)]" name="documentacionExpediente.JustificacionPermiso[@(indiceEnvio)].Archivo" multiple data-allow-reorder="true" data-instant-upload="false" data-default-url="@(documentoRecuperado.URL ?? string.Empty)"  onchange="actualizarVistaPrevia(event)">
                                    <div class="d-flex justify-content-between align-items-center" >
                                        <a href="@(documentoRecuperado.URL ?? string.Empty)" target="_blank" id="documento-actual">
                                            @if (!string.IsNullOrEmpty(documentoRecuperado.URL))
                                            {
                                                var fileName = System.IO.Path.GetFileName(documentoRecuperado.URL); // Obtener el nombre completo del archivo
                                                var firstUnderscoreIndex = fileName.IndexOf('_'); // Buscar el primer guion bajo

                                                @(
                                                    firstUnderscoreIndex >= 0 
                                                        ? fileName.Substring(firstUnderscoreIndex + 1) // Obtener todo después del primer guion bajo
                                                        : fileName // Si no hay guion bajo, mostrar el nombre completo
                                                )
                                            }
                                        </a>
                                        @if (documentoRecuperado.URL != null)
                                        {
                                            <input type="hidden" name="documentacionExpediente.JustificacionPermiso[@(indiceEnvio)].Eliminado" value="false" />
                                            <button type="button" class="btn botonEliminarDocumento" title="Eliminar Documento" id="botonEliminarDocumento" onclick="cambiarEstadoEliminado(event)"><span class="material-symbols-outlined remove-span">delete</span></button>
                                        }
                                    </div>
                                justificacionPermiso = true;
                                indiceEnvio++;       
                                } else {
                                    <label for="justificacionPermiso[@(indiceEnvio)]" @(justificacionPermiso ? "style=display:none" : "") class="form-label">Justificación de permiso(opcional):</label>
                                    <input type="hidden" @(justificacionPermiso ? "style=display:none" : "") name="documentacionExpediente.JustificacionPermiso[@(indiceEnvio)].Id" id="justificacionPermiso[@(indiceEnvio)]_Id" value="@documentoRecuperado.Id" />
                                    <input type="file" @(justificacionPermiso ? "style=display:none" : "") class="form-control"  id="justificacionPermiso[@(indiceEnvio)]" name="documentacionExpediente.JustificacionPermiso[@(indiceEnvio)].Archivo" multiple data-allow-reorder="true" data-instant-upload="false" data-default-url="@(documentoRecuperado.URL ?? string.Empty)"  onchange="actualizarVistaPrevia(event)">
                                    <div class="d-flex justify-content-between align-items-center" @(justificacionPermiso ? "style=display:none" : "")>
                                        <a href="@(documentoRecuperado.URL ?? string.Empty)" target="_blank" id="documento-actual">
                                            @if (!string.IsNullOrEmpty(documentoRecuperado.URL))
                                            {
                                                var fileName = System.IO.Path.GetFileName(documentoRecuperado.URL); // Obtener el nombre completo del archivo
                                                var firstUnderscoreIndex = fileName.IndexOf('_'); // Buscar el primer guion bajo

                                                @(
                                                    firstUnderscoreIndex >= 0 
                                                        ? fileName.Substring(firstUnderscoreIndex + 1) // Obtener todo después del primer guion bajo
                                                        : fileName // Si no hay guion bajo, mostrar el nombre completo
                                                )
                                            }
                                        </a>
                                        @if (documentoRecuperado.URL != null)
                                        {
                                            <input type="hidden" name="documentacionExpediente.JustificacionPermiso[@(indiceEnvio)].Eliminado" value="false" />
                                            <button type="button" class="btn botonEliminarDocumento" title="Eliminar Documento" id="botonEliminarDocumento" onclick="cambiarEstadoEliminado(event)"><span class="material-symbols-outlined remove-span">delete</span></button>
                                        }
                                    </div>
                                    indiceEnvio++;
                                }                    
                            } else if (justificacionPermiso == false && indiceExtra == (numeroDocumentosExtraRecuperados)){                                                                                            
                                <input type="hidden" name="documentacionExpediente.JustificacionPermiso[@(indiceEnvio)].Id" id="justificacionPermiso[@(indiceEnvio)]_Id" value="0" /> 
                                <label for="justificacionPermiso[@(indiceEnvio)]" class="form-label">Justificación de permiso(opcional-multiple):</label>
                                <input type="file" class="form-control"  id="justificacionPermiso[@(indiceEnvio)]" name="documentacionExpediente.JustificacionPermiso[@(indiceEnvio)].Archivo" multiple data-allow-reorder="true" data-instant-upload="false" onchange="actualizarVistaPrevia(event)">
                            }
                            indiceExtra++;

                        }
                        </div>

                        @{indiceExtra = 1;
                        indiceEnvio = 0;}
                           

                        <div class="form-group" >                                
                        @foreach (var documentoRecuperado in Model.documentosRecuperados)
                        {
                            if(documentoRecuperado.IdTipoDocumento == 30){
                                if(constanciaCursosTalleres == false){
                                    <label for="constanciaCursosTalleres[@(indiceEnvio)]" class="form-label">Constancias de cursos o talleres(opcional-multiple):</label>
                                    <input type="hidden" name="documentacionExpediente.ConstanciaCursosTalleres[@(indiceEnvio)].Id" id="constanciaCursosTalleres[@(indiceEnvio)]_Id" value="@documentoRecuperado.Id" />
                                    <input type="file" class="form-control"  id="constanciaCursosTalleres[@(indiceEnvio)]" name="documentacionExpediente.ConstanciaCursosTalleres[@(indiceEnvio)].Archivo" multiple data-allow-reorder="true" data-instant-upload="false" data-default-url="@(documentoRecuperado.URL ?? string.Empty)"  onchange="actualizarVistaPrevia(event)">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <a href="@(documentoRecuperado.URL ?? string.Empty)" target="_blank" id="documento-actual">
                                            @if (!string.IsNullOrEmpty(documentoRecuperado.URL))
                                            {
                                                var fileName = System.IO.Path.GetFileName(documentoRecuperado.URL); // Obtener el nombre completo del archivo
                                                var firstUnderscoreIndex = fileName.IndexOf('_'); // Buscar el primer guion bajo

                                                @(
                                                    firstUnderscoreIndex >= 0 
                                                        ? fileName.Substring(firstUnderscoreIndex + 1) // Obtener todo después del primer guion bajo
                                                        : fileName // Si no hay guion bajo, mostrar el nombre completo
                                                )
                                            }
                                        </a>
                                        @if (documentoRecuperado.URL != null)
                                        {
                                            <input type="hidden" name="documentacionExpediente.ConstanciaCursosTalleres[@(indiceEnvio)].Eliminado" value="false" />
                                            <button type="button" class="btn botonEliminarDocumento" title="Eliminar Documento" id="botonEliminarDocumento" onclick="cambiarEstadoEliminado(event)"><span class="material-symbols-outlined remove-span">delete</span></button>
                                        }
                                    </div>
                                constanciaCursosTalleres = true;
                                indiceEnvio++;
                                } else {
                                    <label for="constanciaCursosTalleres[@(indiceEnvio)]" @(constanciaCursosTalleres ? "style=display:none" : "") class="form-label">Constancias de cursos o talleres(opcional-multiple):</label>
                                    <input type="hidden" @(constanciaCursosTalleres ? "style=display:none" : "") name="documentacionExpediente.ConstanciaCursosTalleres[@(indiceEnvio)].Id" id="constanciaCursosTalleres[@(indiceEnvio)]_Id" value="@documentoRecuperado.Id" />
                                    <input type="file" @(constanciaCursosTalleres ? "style=display:none" : "") class="form-control"  id="constanciaCursosTalleres[@(indiceEnvio)]" name="documentacionExpediente.ConstanciaCursosTalleres[@(indiceEnvio)].Archivo" multiple data-allow-reorder="true" data-instant-upload="false" data-default-url="@(documentoRecuperado.URL ?? string.Empty)"  onchange="actualizarVistaPrevia(event)">
                                    <div class="d-flex justify-content-between align-items-center" @(constanciaCursosTalleres ? "style=display:none" : "")>
                                        <a href="@(documentoRecuperado.URL ?? string.Empty)" target="_blank" id="documento-actual">
                                            @if (!string.IsNullOrEmpty(documentoRecuperado.URL))
                                            {
                                                var fileName = System.IO.Path.GetFileName(documentoRecuperado.URL); // Obtener el nombre completo del archivo
                                                var firstUnderscoreIndex = fileName.IndexOf('_'); // Buscar el primer guion bajo

                                                @(
                                                    firstUnderscoreIndex >= 0 
                                                        ? fileName.Substring(firstUnderscoreIndex + 1) // Obtener todo después del primer guion bajo
                                                        : fileName // Si no hay guion bajo, mostrar el nombre completo
                                                )
                                            }
                                        </a>
                                        @if (documentoRecuperado.URL != null)
                                        {
                                            <input type="hidden" name="documentacionExpediente.ConstanciaCursosTalleres[@(indiceEnvio)].Eliminado" value="false" />
                                            <button type="button" class="btn botonEliminarDocumento" title="Eliminar Documento" id="botonEliminarDocumento" onclick="cambiarEstadoEliminado(event)"><span class="material-symbols-outlined remove-span">delete</span></button>
                                        }
                                    </div>
                                    indiceEnvio++;
                                }
                            } else if (constanciaCursosTalleres == false && indiceExtra == (numeroDocumentosExtraRecuperados)){                              
                                <input type="hidden" name="documentacionExpediente.ConstanciaCursosTalleres[@(indiceEnvio)].Id" id="constanciaCursosTalleres[@(indiceEnvio)]_Id" value="0" /> 
                                <label for="constanciaCursosTalleres[@(indiceEnvio)]" class="form-label">Constancias de cursos o talleres(opcional-multiple):</label>
                                <input type="file" class="form-control"  id="constanciaCursosTalleres[@(indiceEnvio)]" name="documentacionExpediente.ConstanciaCursosTalleres[@(indiceEnvio)].Archivo" multiple data-allow-reorder="true" data-instant-upload="false" onchange="actualizarVistaPrevia(event)">
                            } 
                            indiceExtra++;

                        }
                        </div>

                        @{indiceExtra = 1;
                        indiceEnvio = 0;}    


                        <div class="form-group" >                                
                        @foreach (var documentoRecuperado in Model.documentosRecuperados)
                        {
                            if (documentoRecuperado.IdTipoDocumento == 27){
                                if(pruebasPsicometricas == false){
                                    <label for="pruebasPsicometricas[@(indiceEnvio)]" class="form-label">Pruebas psicométricas(opcional-multiple):</label>
                                    <input type="hidden" name="documentacionExpediente.PruebasPsicometricas[@(indiceEnvio)].Id" id="pruebasPsicometricas[@(indiceEnvio)]_Id" value="@documentoRecuperado.Id" />
                                    <input type="file" class="form-control"  id="pruebasPsicometricas[@(indiceEnvio)]" name="documentacionExpediente.PruebasPsicometricas[@(indiceEnvio)].Archivo" multiple data-allow-reorder="true" data-instant-upload="false" data-default-url="@(documentoRecuperado.URL ?? string.Empty)"  onchange="actualizarVistaPrevia(event)">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <a href="@(documentoRecuperado.URL ?? string.Empty)" target="_blank" id="documento-actual">
                                            @if (!string.IsNullOrEmpty(documentoRecuperado.URL))
                                            {
                                                var fileName = System.IO.Path.GetFileName(documentoRecuperado.URL); // Obtener el nombre completo del archivo
                                                var firstUnderscoreIndex = fileName.IndexOf('_'); // Buscar el primer guion bajo

                                                @(
                                                    firstUnderscoreIndex >= 0 
                                                        ? fileName.Substring(firstUnderscoreIndex + 1) // Obtener todo después del primer guion bajo
                                                        : fileName // Si no hay guion bajo, mostrar el nombre completo
                                                )
                                            }
                                        </a>
                                        @if (documentoRecuperado.URL != null)
                                        {
                                            <input type="hidden" name="documentacionExpediente.PruebasPsicometricas[@(indiceEnvio)].Eliminado" value="false" />
                                            <button type="button" class="btn botonEliminarDocumento" title="Eliminar Documento" id="botonEliminarDocumento" onclick="cambiarEstadoEliminado(event)"><span class="material-symbols-outlined remove-span">delete</span></button>
                                        }
                                    </div>
                                pruebasPsicometricas = true;
                                indiceEnvio++;
                                } else {
                                    <label for="pruebasPsicometricas[@(indiceEnvio)]" @(pruebasPsicometricas ? "style=display:none" : "") class="form-label">Pruebas psicométricas(opcional-multipĺe):</label>
                                    <input type="hidden" @(pruebasPsicometricas ? "style=display:none" : "") name="documentacionExpediente.PruebasPsicometricas[@(indiceEnvio)].Id" id="pruebasPsicometricas[@(indiceEnvio)]_Id" value="@documentoRecuperado.Id" />
                                    <input type="file" @(pruebasPsicometricas ? "style=display:none" : "") class="form-control"  id="pruebasPsicometricas[@(indiceEnvio)]" name="documentacionExpediente.PruebasPsicometricas[@(indiceEnvio)].Archivo" multiple data-allow-reorder="true" data-instant-upload="false" data-default-url="@(documentoRecuperado.URL ?? string.Empty)"  onchange="actualizarVistaPrevia(event)">
                                    <div class="d-flex justify-content-between align-items-center" @(pruebasPsicometricas ? "style=display:none" : "")>
                                        <a href="@(documentoRecuperado.URL ?? string.Empty)" target="_blank" id="documento-actual">
                                            @if (!string.IsNullOrEmpty(documentoRecuperado.URL))
                                            {
                                                var fileName = System.IO.Path.GetFileName(documentoRecuperado.URL); // Obtener el nombre completo del archivo
                                                var firstUnderscoreIndex = fileName.IndexOf('_'); // Buscar el primer guion bajo

                                                @(
                                                    firstUnderscoreIndex >= 0 
                                                        ? fileName.Substring(firstUnderscoreIndex + 1) // Obtener todo después del primer guion bajo
                                                        : fileName // Si no hay guion bajo, mostrar el nombre completo
                                                )
                                            }
                                        </a>
                                        @if (documentoRecuperado.URL != null)
                                        {
                                            <input type="hidden" name="documentacionExpediente.PruebasPsicometricas[@(indiceEnvio)].Eliminado" value="false" />
                                            <button type="button" class="btn botonEliminarDocumento" title="Eliminar Documento" id="botonEliminarDocumento" onclick="cambiarEstadoEliminado(event)"><span class="material-symbols-outlined remove-span">delete</span></button>
                                        }
                                    </div>
                                    indiceEnvio++;
                                }
                            } else if (pruebasPsicometricas == false && indiceExtra == (numeroDocumentosExtraRecuperados)){
                                    <input type="hidden" name="documentacionExpediente.PruebasPsicometricas[@(indiceEnvio)].Id" id="pruebasPsicometricas[@(indiceEnvio)]_Id" value="0" /> 
                                    <label for="pruebasPsicometricas[@(indiceEnvio)]" class="form-label">Pruebas psicométricas(opcional-multiple):</label>
                                    <input type="file" class="form-control"  id="pruebasPsicometricas[@(indiceEnvio)]" name="documentacionExpediente.PruebasPsicometricas[@(indiceEnvio)].Archivo" multiple data-allow-reorder="true" data-instant-upload="false" onchange="actualizarVistaPrevia(event)">
                            }

                            indiceExtra++;

                        }
                        </div>

                        @{indiceExtra = 1;
                        indiceEnvio = 0;}    



                        <div class="form-group" >                                
                        @foreach (var documentoRecuperado in Model.documentosRecuperados)
                        {
                            
                            if (documentoRecuperado.IdTipoDocumento == 28){
                                if (formatoActasAdministrativas == false){
                                    <label for="formatoActasAdministrativas[@(indiceEnvio)]" class="form-label">Formato de actas administrativas(opcional):</label>
                                    <input type="hidden" name="documentacionExpediente.ActasAdministrativas[@(indiceEnvio)].Id" id="formatoActasAdministrativas[@(indiceEnvio)]_Id" value="@documentoRecuperado.Id" />
                                    <input type="file" class="form-control"  id="formatoActasAdministrativas[@(indiceEnvio)]" name="documentacionExpediente.ActasAdministrativas[@(indiceEnvio)].Archivo" multiple data-allow-reorder="true" data-instant-upload="false" data-default-url="@(documentoRecuperado.URL ?? string.Empty)"  onchange="actualizarVistaPrevia(event)">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <a href="@(documentoRecuperado.URL ?? string.Empty)" target="_blank" id="documento-actual">
                                            @if (!string.IsNullOrEmpty(documentoRecuperado.URL))
                                            {
                                                var fileName = System.IO.Path.GetFileName(documentoRecuperado.URL); // Obtener el nombre completo del archivo
                                                var firstUnderscoreIndex = fileName.IndexOf('_'); // Buscar el primer guion bajo

                                                @(
                                                    firstUnderscoreIndex >= 0 
                                                        ? fileName.Substring(firstUnderscoreIndex + 1) // Obtener todo después del primer guion bajo
                                                        : fileName // Si no hay guion bajo, mostrar el nombre completo
                                                )
                                            }
                                        </a>
                                        @if (documentoRecuperado.URL != null)
                                        {
                                            <input type="hidden" name="documentacionExpediente.ActasAdministrativas[@(indiceEnvio)].Eliminado" value="false" />
                                            <button type="button" class="btn botonEliminarDocumento" title="Eliminar Documento" id="botonEliminarDocumento" onclick="cambiarEstadoEliminado(event)"><span class="material-symbols-outlined remove-span">delete</span></button>
                                        }
                                    </div>
                                formatoActasAdministrativas = true;
                                indiceEnvio++;
                                } else {
                                    <label for="formatoActasAdministrativas[@(indiceEnvio)]" @(formatoActasAdministrativas ? "style=display:none" : "") class="form-label">Formato de actas administrativas(opcional):</label>
                                    <input type="hidden" @(formatoActasAdministrativas ? "style=display:none" : "") name="documentacionExpediente.ActasAdministrativas[@(indiceEnvio)].Id" id="formatoActasAdministrativas[@(indiceEnvio)]_Id" value="@documentoRecuperado.Id" />
                                    <input type="file" class="form-control"  @(formatoActasAdministrativas ? "style=display:none" : "") id="formatoActasAdministrativas[@(indiceEnvio)]" name="documentacionExpediente.ActasAdministrativas[@(indiceEnvio)].Archivo" multiple data-allow-reorder="true" data-instant-upload="false" data-default-url="@(documentoRecuperado.URL ?? string.Empty)"  onchange="actualizarVistaPrevia(event)">
                                    <div class="d-flex justify-content-between align-items-center" @(formatoActasAdministrativas ? "style=display:none" : "")>
                                        <a href="@(documentoRecuperado.URL ?? string.Empty)" target="_blank" id="documento-actual">
                                            @if (!string.IsNullOrEmpty(documentoRecuperado.URL))
                                            {
                                                var fileName = System.IO.Path.GetFileName(documentoRecuperado.URL); // Obtener el nombre completo del archivo
                                                var firstUnderscoreIndex = fileName.IndexOf('_'); // Buscar el primer guion bajo

                                                @(
                                                    firstUnderscoreIndex >= 0 
                                                        ? fileName.Substring(firstUnderscoreIndex + 1) // Obtener todo después del primer guion bajo
                                                        : fileName // Si no hay guion bajo, mostrar el nombre completo
                                                )
                                            }
                                        </a>
                                        @if (documentoRecuperado.URL != null)
                                        {
                                            <input type="hidden" name="documentacionExpediente.ActasAdministrativas[@(indiceEnvio)].Eliminado" value="false" />
                                            <button type="button" class="btn botonEliminarDocumento" title="Eliminar Documento" id="botonEliminarDocumento" onclick="cambiarEstadoEliminado(event)"><span class="material-symbols-outlined remove-span">delete</span></button>
                                        }
                                    </div>
                                    indiceEnvio++;
                                }
                            } else if (formatoActasAdministrativas == false && indiceExtra == (numeroDocumentosExtraRecuperados)){
                                <input type="hidden" name="documentacionExpediente.ActasAdministrativas[@(indiceEnvio)].Id" id="formatoActasAdministrativas[@(indiceEnvio)]_Id" value="0" /> 
                                <label for="formatoActasAdministrativas[@(indiceEnvio)]" class="form-label">Formato de actas administrativas(opcional):</label>
                                <input type="file" class="form-control"  id="formatoActasAdministrativas[@(indiceEnvio)]" name="documentacionExpediente.ActasAdministrativas[@(indiceEnvio)].Archivo"  data-allow-reorder="true" data-instant-upload="false" onchange="actualizarVistaPrevia(event)" multiple>
                            }
                            indiceExtra++;

                        }
                        </div>

                    </div>


                    <div class="botonesDocumentacion">
                        <button type="submit" class="button centrado envioSubmirButton">
                            <span class="material-symbols-outlined">save</span>Guardar
                        </button>
                    </div>

                </form>
            </div>
        </div>





        <!-- Datos Académicos -->
        <div id="collapseFive" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
            <div class="accordion-body">
                <form id="formcollapseFive" method="post" asp-page-handler="GuardarDatosAcademicos" enctype="multipart/form-data">
                    <div class="containerDatosAcademicos" id="estudiosContainer">
                        <div id="sinDatosAcademicos">
                            <p align="center">Sin datos academicos</p>
                        </div>
                        <input type="hidden" name="idUsuarioActual" value="@Model.idUsuarioActual" />

                        @if (Model.datosAcademicosRecuperados.Count > 0)
                        {
                            <input type="hidden" id="numeroIndiceDatosAcademicos" value="@Model.datosAcademicosRecuperados.Count" />
                        }
                        else{ //SI no hay datos academicos recuperados, se inicializa el indice en 1 para que se puedan llenar los selects dinamicos creados con javascript
                            <input type="hidden" id="numeroIndiceDatosAcademicos" value="1" />
                            <!-- Fila inicial como plantilla -->
                            <div class="form-group row mb-3 align-items-center estudio-row estudioContainerPreguntas">
                            <input type="hidden" name="estudios[0].Id" value="0" /> <!-- Los que tengan id 0 son los que se agregaron despues de la carga de la pagina, esos se guardan y los otros se actualizan -->
                                <div class="col-md-12">
                                    <label for="nivelEstudios_0" class="form-label">Nivel de Estudios:</label>
                                    <select id="nivelEstudios_0" name="estudios[0].IdNivelAcademico" class="form-control" required>
                                        <option value="" selected>Seleccione una opción</option>
                                        @foreach (var nivelAcademico in Model.nivelesAcademicos)
                                        {
                                            <option value="@nivelAcademico.Id">@nivelAcademico.Nombre</option>
                                        }
                                    </select>
                                </div>
                                <div class="col-md-12">
                                    <label for="tituloObtenido_0" class="form-label">Título Obtenido:</label>
                                    <input type="text" class="form-control" name="estudios[0].NombreTitulo" id="tituloObtenido_0" required>
                                </div>
                                <div class="col-md-12">
                                    <label for="celula_0" class="form-label">Cédula(opcional):</label>
                                    <input type="number" class="form-control" name="estudios[0].Cedula" id="celula_0">
                                </div>
                                <div class="col-md-12">
                                    <label for="estatusEstudio_0" class="form-label">Estatus Estudio:</label>
                                    <select id="estatusEstudio_0" name="estudios[0].IdEstatusEstudio" class="form-control" required>
                                        <option value="" selected>Seleccione una opción</option>
                                        @foreach (var estatus in Model.estatusEstudio)
                                        {
                                            <option value="@estatus.Id">@estatus.Nombre</option>
                                        }
                                    </select>
                                </div>
                                <div class="col-md-12">
                                    <label for="documento_0" class="form-label">Documento(opcional):</label>
                                    <input type="file" class="form-control" name="estudios[0].IdDocumento.Archivo" id="documento_0">
                                </div>
                                <div class="col-md-2 contenedorBoton">
                                    <button type="button" class="btn btn-danger remove-btn mt-4 botonEliminar"><span class="material-symbols-outlined remove-span">remove</span></button>
                                </div>
                            </div>  
                        }

                        @{ 
                            var indexDatosAcademicos = 0;
                        }
                        @foreach (var estudioRecuperado in Model.datosAcademicosRecuperados)
                        {
                            <div class="form-group row mb-3 align-items-center estudio-row estudioContainerPreguntas">
                                <input type="hidden" name="estudios[@indexDatosAcademicos].Id" value="@estudioRecuperado.Id" />
                                <div class="col-md-12">
                                    <label for="nivelEstudios_@(indexDatosAcademicos)" class="form-label">Nivel de Estudios:</label>
                                    <select id="nivelEstudios_@(indexDatosAcademicos)" name="estudios[@indexDatosAcademicos].IdNivelAcademico" class="form-control" required>
                                        <option value="" selected>Seleccione una opción</option>
                                        @foreach (var nivelAcademico in Model.nivelesAcademicos)
                                        {
                                            <option value="@nivelAcademico.Id" selected="@(estudioRecuperado.IdNivelAcademico == nivelAcademico.Id)">@nivelAcademico.Nombre</option>
                                        }
                                    </select>
                                </div>
                                <div class="col-md-12">
                                    <label for="tituloObtenido_@(indexDatosAcademicos)" class="form-label">Título Obtenido:</label>
                                    <input type="text" class="form-control" name="estudios[@indexDatosAcademicos].NombreTitulo" id="tituloObtenido_@(indexDatosAcademicos)" value="@estudioRecuperado.NombreTitulo" required>
                                </div>
                                <div class="col-md-12">
                                    <label for="celula_@(indexDatosAcademicos)" class="form-label" >Cédula(opcional):</label>
                                    <input type="number" class="form-control" name="estudios[@indexDatosAcademicos].Cedula" id="celula_@(indexDatosAcademicos)" value="@(estudioRecuperado.Cedula ?? string.Empty)">
                                </div>
                                <div class="col-md-12">
                                    <label for="estatusEstudio_@(indexDatosAcademicos)" class="form-label">Estatus Estudio:</label>
                                    <select id="estatusEstudio_@(indexDatosAcademicos)" name="estudios[@indexDatosAcademicos].IdEstatusEstudio" class="form-control" required>
                                        <option value="" selected>Seleccione una opción</option>
                                        @foreach (var estatus in Model.estatusEstudio)
                                        {
                                            <option value="@estatus.Id" selected="@(estudioRecuperado.IdEstatusEstudio == estatus.Id)">@estatus.Nombre</option>
                                        }
                                    </select>
                                </div>
                                <div class="col-md-12">
                                    <label for="documento_@(indexDatosAcademicos)" class="form-label">Documento(opcional):</label>
                                    <!-- Con este input enviare el id en negativo (lo cambio con java) en caso de que sea editado-->
                                    <input type="hidden" name="estudios[@indexDatosAcademicos].IdDocumento.Id" id="documento_@(indexDatosAcademicos)_Id" value="@estudioRecuperado.IdDocumento?.Id" />  <!--EL ID NO ME ESTA RETORNANDO -->
                                    <input type="file" class="form-control" name="estudios[@indexDatosAcademicos].IdDocumento.Archivo" id="documento_@(indexDatosAcademicos)" data-default-url="@(estudioRecuperado.IdDocumento?.URL ?? string.Empty)" onchange="actualizarVistaPrevia(event)">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <a href="@(estudioRecuperado.IdDocumento?.URL ?? string.Empty)" target="_blank" id="documento-actual">@(estudioRecuperado.IdDocumento?.URL != null ? "Ver documento actual" : string.Empty) </a>
                                        @if (estudioRecuperado.IdDocumento?.URL != null)
                                        {
                                            <input type="hidden" name="estudios[@indexDatosAcademicos].IdDocumento.Eliminado" value="false" />
                                            <button type="button" class="btn botonEliminarDocumento" title="Eliminar Documento" id="botonEliminarDocumento" onclick="cambiarEstadoEliminado(event)"><span class="material-symbols-outlined remove-span">delete</span></button>
                                        }
                                    </div>
                                </div>
                                <div class="col-md-2 contenedorBoton">
                                    <button type="button" class="btn btn-danger remove-btn mt-4 botonEliminar"><span class="material-symbols-outlined remove-span">remove</span></button>
                                </div>

                            </div>
                            indexDatosAcademicos++;
                        }
                                
                    </div>
                    <div class="botonesEstudios"> 
                        <button type="button" class="button centrado" id="addEstudioBtn"><span class="material-symbols-outlined">add</span>Agregar otro estudio</button>
                        <button type="submit" class="button centrado envioSubmirButton"><span class="material-symbols-outlined">save</span>Guardar</button>
                    </div>
                </form>
            </div>
        </div>




        <!-- Historial Profesional -->
        <div id="collapseSix" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
            <div class="accordion-body">
                <form id="formcollapseSix" method="post" asp-page-handler="GuardarHistorialProfesional" enctype="multipart/form-data">
                        <!-- Fila inicial como plantilla -->
                    <div class="form-group containerDatosProfesionales" id="containerDatosProfesionales">
                        <div id="sinHistorialProfesional">
                            <p align="center">Sin Historial Profesional</p>
                        </div>
                        <input type="hidden" name="idUsuarioActual" value="@Model.idUsuarioActual" />
                        @if (Model.experienciasRecuperadas.Count > 0)
                        {
                            <input type="hidden" id="numeroIndiceHistorialProfesional" value="@Model.experienciasRecuperadas.Count" />
                        }
                        else 
                        {
                        <input type="hidden" id="numeroIndiceHistorialProfesional" value="1" />
                        <div class="form-group containerDatosProfesionales containerDatosProfesionalesCard">
                        <input type="hidden" name="experiencias[0].Id" value="0" /> 
                            <div class="row mb-3 containerDatosProfesionales__headerCar" >
                                <div class="col-md-12">
                                      <h3>Información de la experiencia</h3>
                                </div>
                                <div class="col-md-2 contenedorBoton">
                                    <button type="button" class="btn btn-danger remove-btn botonEliminar"><span class="material-symbols-outlined remove-span">remove</span></button>
                                </div>
                            </div>
                            <div> 
                                <div class="row mb-3">
                                    <div class="col-md-12 mb-3" >
                                        <label for="nombreEmpleador0" class="form-label">Nombre del Empleador(opcional):</label>
                                        <input type="text" class="form-control" name="experiencias[0].NombreEmpleador" id="nombreEmpleador0">
                                    </div>
                                    <div class="col-md-12">
                                        <label for="cargoOcupado0"  class="form-label">Cargo Ocupado:</label>
                                        <input type="text" class="form-control" name="experiencias[0].CargoOcupado" id="cargoOcupado0" required>
                                    </div>
                                </div>
                                <div class="row mb-3">
                                    <div class="col-md-12 mb-3">
                                        <label for="IdEstatusTipoExperiencia0" class="form-label">Tipo de Experiencia:</label>
                                        <select name="experiencias[0].IdEstatusTipoExperiencia" class="form-control" id="IdEstatusTipoExperiencia0" required>
                                            <option value="" selected>Seleccione una opción</option>
                                            @foreach (var tipoExperiencia in Model.tiposExperiencias)
                                            {
                                                <option value="@tipoExperiencia.Id">@tipoExperiencia.Nombre</option>
                                            }
                                        </select>
                                    </div>
                                    <div class="col-md-12">
                                        <label for="descripcion0" class="form-label">Descripción:</label>
                                        <input type="text" class="form-control" name="experiencias[0].Descripcion" id="descripcion0" required>
                                    </div>
                                </div>
                                <div class="row mb-3">
                                    <div class="col-md-12 mb-3">
                                        <label for="fechaInicio0"  class="form-label">Fecha de Inicio:</label>
                                        <input type="date" class="form-control" name="experiencias[0].FechaInicio" id="fechaInicio0" required>
                                    </div>
                                    <div class="col-md-12">
                                        <label for="FechaTermino0" class="form-label" >Fecha de Fin(opcional):</label>
                                        <input type="date" class="form-control" name="experiencias[0].FechaTermino" id="FechaTermino0">
                                    </div>
                                </div>
                                <div class="row mb-3">
                                    <div class="col-md-12">
                                        <label for="archivo0" class="form-label">Carta de recomendación(opcional):</label>
                                        <input type="file" class="form-control" name="experiencias[0].IdDocumento.Archivo" id="archivo0">
                                    </div>
                                </div>
                            </div>
                        </div>
                        }

                       @{
                            var indexHistorialProfesional = 0;
                        }
                        @foreach (var experienciaRecuperada in Model.experienciasRecuperadas)
                        {
                            <div class="form-group containerDatosProfesionales containerDatosProfesionalesCard">
                                <input type="hidden" name="experiencias[@indexHistorialProfesional].Id" value="@experienciaRecuperada.Id" /> 
                                <div class="row mb-3 containerDatosProfesionales__headerCar">
                                    <div class="col-md-12">
                                        <h3>Información de la experiencia</h3>
                                    </div>
                                    <div class="col-md-2 contenedorBoton">
                                        <button type="button" class="btn btn-danger remove-btn botonEliminar"><span class="material-symbols-outlined remove-span">remove</span></button>
                                    </div>
                                </div>
                                <input type="hidden" name="experiencias[@indexHistorialProfesional].Id" value="@experienciaRecuperada.Id" />
                                <div class="row mb-3">
                                    <div class="col-md-12">
                                        <label for="nombreEmpleador@(indexHistorialProfesional)" class="form-label">Nombre del Empleador(opcional):</label>
                                        <input type="text" class="form-control" name="experiencias[@indexHistorialProfesional].NombreEmpleador" id="nombreEmpleador@(indexHistorialProfesional)" value="@(experienciaRecuperada.NombreEmpleador ?? string.Empty)">
                                    </div>
                                    <div class="col-md-12">
                                        <label for="cargoOcupado@(indexHistorialProfesional)" class="form-label">Cargo Ocupado:</label>
                                        <input type="text" class="form-control" name="experiencias[@indexHistorialProfesional].CargoOcupado" id="cargoOcupado@(indexHistorialProfesional)" value="@experienciaRecuperada.CargoOcupado" required>
                                    </div>
                                </div>
                                <div class="row mb-3">
                                    <div class="col-md-12">
                                        <label for="IdEstatusTipoExperiencia@(indexHistorialProfesional)" class="form-label">Tipo de Experiencia:</label>
                                        <select name="experiencias[@indexHistorialProfesional].IdEstatusTipoExperiencia" class="form-control" id="IdEstatusTipoExperiencia@(indexHistorialProfesional)" required>
                                            <option value="" selected>Seleccione una opción</option>
                                            @foreach (var tipoExperiencia in Model.tiposExperiencias)
                                            {
                                                <option value="@tipoExperiencia.Id" selected="@(experienciaRecuperada.IdEstatusTipoExperiencia == tipoExperiencia.Id)">@tipoExperiencia.Nombre</option>
                                            }
                                        </select>
                                    </div>
                                    <div class="col-md-12">
                                        <label for="descripcion@(indexHistorialProfesional)" class="form-label">Descripción:</label>
                                        <input type="text" class="form-control" name="experiencias[@indexHistorialProfesional].Descripcion" id="descripcion@(indexHistorialProfesional)" value="@experienciaRecuperada.Descripcion" required>
                                    </div>
                                </div>
                                <div class="row mb-3">
                                    <div class="col-md-12">
                                        <label for="fechaInicio@(indexHistorialProfesional)" class="form-label">Fecha de Inicio:</label>
                                        <input type="date" class="form-control fecha-inicio" name="experiencias[@indexHistorialProfesional].FechaInicio" id="fechaInicio@(indexHistorialProfesional)" value="@experienciaRecuperada.FechaInicio.ToString("yyyy-MM-dd")" required onchange="actualizarFechaMinima(this)">
                                    </div>
                                    <div class="col-md-12">
                                        <label for="FechaTermino@(indexHistorialProfesional)" class="form-label">Fecha de Fin(opcional):</label>
                                        <input type="date" class="form-control fecha-termino" name="experiencias[@indexHistorialProfesional].FechaTermino" id="FechaTermino@(indexHistorialProfesional)" value="@experienciaRecuperada.FechaTermino?.ToString("yyyy-MM-dd")" min="@experienciaRecuperada.FechaInicio.ToString("yyyy-MM-dd")">
                                    </div>
                                </div>
                                <div class="row mb-3">
                                    <div class="col-md-12">
                                        <label for="documento@(indexHistorialProfesional)" class="form-label">Carta de recomendación(opcional):</label>
                                        <!-- Con este input enviare el id en negativo (lo cambio con java) en caso de que sea editado-->
                                        <input type="hidden" name="experiencias[@indexHistorialProfesional].IdDocumento.Id" id="documento@(indexHistorialProfesional)_Id" value="@experienciaRecuperada.IdDocumento?.Id" />  <!--EL ID NO ME ESTA RETORNANDO -->
                                        <input type="file" class="form-control" name="experiencias[@indexHistorialProfesional].IdDocumento.Archivo" id="documento@(indexHistorialProfesional)" data-default-url="@experienciaRecuperada.IdDocumento?.URL" onchange="actualizarVistaPrevia(event)">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <a href="@experienciaRecuperada.IdDocumento?.URL" target="_blank" id="documento-actual">@(experienciaRecuperada.IdDocumento?.URL != null ? "Ver documento actual" : string.Empty) </a>

                                            @if (experienciaRecuperada.IdDocumento?.URL != null)
                                            {
                                                <input type="hidden" name="experiencias[@indexHistorialProfesional].IdDocumento.Eliminado" value="false" />
                                                <button type="button" class="btn botonEliminarDocumento" title="Eliminar Documento" id="botonEliminarDocumento" onclick="cambiarEstadoEliminado(event)"><span class="material-symbols-outlined remove-span">delete</span></button>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                            indexHistorialProfesional++;            
                        }

                    </div>
                    <div class="botonesHistorialProfesional">
                        <button type="button" class="button centrado" id="addHistorialAcademicoBtn"><span class="material-symbols-outlined">add</span>Agregar otra experiencia</button>
                        <button type="submit" class="button centrado envioSubmirButton"><span class="material-symbols-outlined">save</span>Guardar</button>
                    </div>
                </form>
            </div>
        </div>

        
        <!-- Datos Socioeconómicos -->
        <div id="collapseSeven" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
            <div class="accordion-body">
                <form id="formcollapseSeven" method="post" asp-page-handler="GuardarDatosSocioeconomicos">
                    <div class="row">
                        <input type="hidden" name="idUsuarioActual" value="@Model.idUsuarioActual" />
                        <!-- Preguntas -->
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="hijos">¿Cuántos hijos tiene?</label>
                                <input type="number" id="hijos" name="datosSocioeconomicos.Hijos" class="form-control" value="@(Model.Usuario?.Hijos ?? 0)" required>
                            </div>

                            <div class="form-group">
                                <label for="viviendaPropia">¿Cuenta con vivienda propia?</label>
                                <select name="datosSocioeconomicos.ViviendaPropia" id="viviendaPropia" class="form-select" required>
                                    <option value="" selected>Seleccione una opción</option>
                                    <option value="true" selected="@(Model.Usuario?.ViviendaPropia == true)">Sí</option>
                                    <option value="false" selected="@(Model.Usuario?.ViviendaPropia == false)">No</option>
                                </select>
                            </div>

                            <div class="form-group">
                                <label for="vehiculoPropio">¿Cuenta con vehículo propio?</label>
                                <select name="datosSocioeconomicos.VehiculoPropio" id="vehiculoPropio" class="form-select" required>
                                    <option value="" selected>Seleccione una opción</option>
                                    <option value="true" selected="@(Model.Usuario?.VehiculoPropio == true)">Sí</option>
                                    <option value="false" selected="@(Model.Usuario?.VehiculoPropio == false)">No</option>
                                </select>
                            </div>

                            <div class="form-group">
                                <label for="rentaCasa">¿Cuenta con casa en renta?</label>
                                <select name="datosSocioeconomicos.RentaCasa" id="rentaCasa" class="form-select" required>
                                    <option value="" selected>Seleccione una opción</option>
                                    <option value="true" selected="@(Model.Usuario?.RentaCasa == true)">Sí</option>
                                    <option value="false" selected="@(Model.Usuario?.RentaCasa == false)">No</option>
                                </select>
                            </div>

                            <div class="form-group">
                                <label for="deudas">¿Cuenta con deudas?</label>
                                <select name="datosSocioeconomicos.Deudas" id="deudas" class="form-select" required>
                                    <option value="" selected>Seleccione una opción</option>
                                    <option value="true" selected="@(Model.Usuario?.Deudas == true)">Sí</option>
                                    <option value="false" selected="@(Model.Usuario?.Deudas == false)">No</option>
                                </select>
                            </div>

                            <div class="form-group">
                                <label for="mascotas">¿Tiene mascotas?</label>
                                <select name="datosSocioeconomicos.Mascotas" id="mascotas" class="form-select" required>
                                    <option value="" selected>Seleccione una opción</option>
                                    <option value="true" selected="@(Model.Usuario?.Mascotas == true)">Sí</option>
                                    <option value="false" selected="@(Model.Usuario?.Mascotas == false)">No</option>
                                </select>
                            </div>
                        </div>

                        <!-- Preguntas adicionales -->
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="ingresosMensuales">¿Cuáles son sus ingresos mensuales?</label>
                                <input type="number" id="ingresosMensuales" name="datosSocioeconomicos.IngresosMensuales" class="form-control" value="@(Model.Usuario?.IngresosMensuales ?? 0)" required>
                            </div>

                            <div class="form-group">
                                <label for="gastosMensuales">¿Cuáles son sus gastos mensuales?</label>
                                <input type="number" id="gastosMensuales" name="datosSocioeconomicos.GastoMensual" class="form-control" value="@(Model.Usuario?.GastoMensual ?? 0)" required>
                            </div>

                            <div class="form-group">
                                <label for="frecuenciaActividadesRecreativas">¿Con qué frecuencia realiza alguna actividad recreativa (válido del 1 al 7)?</label>
                                <input type="number" id="frecuenciaActividadesRecreativas" name="datosSocioeconomicos.FrecuenciaActividadesRecreativas" min="1" max="7" class="form-control" value="@(Model.Usuario?.FrecuenciaActividadesRecreativas ?? 0)" required>
                            </div>

                            <div class="form-group">
                                <label for="personasVivenCasa">¿Cuántas personas viven en su casa?</label>
                                <input type="number" id="personasVivenCasa" name="datosSocioeconomicos.PersonasVivenCasa" class="form-control" value="@(Model.Usuario?.PersonasVivenCasa ?? 0)" required>
                            </div>

                            <div class="form-group">
                                <label for="personasDependen">¿Cuántas  personas dependen de usted?</label>
                                <input type="number" id="personasDependen" name="datosSocioeconomicos.PersonasDependientes" class="form-control" value="@(Model.Usuario?.PersonasDependientes ?? 0)" required>
                            </div>
                        </div>
                    </div>

                    <div class="botonesDatosSocieconomicos">
                        <button type="submit" class="button centrado envioSubmirButton"><span class="material-symbols-outlined">save</span>Guardar</button>
                    </div>
                </form>
            </div>
        </div>

    </div>
</div>


@section Scripts{
    <script src="~/js/informacionComplementaria.js"></script>

    <script>
        let seccionActualId = "collapseOne"; //Recien carga la pagina
        
        //Variables para correr la funcion y capturar la data inicial
        let requestsCompleted = 0; // Variable global para contar las solicitudes completadas
        let totalRequests = 3;  // Total de solicitudes que debemos esperar (Estados, Municipios, Colonias)
        let estatus = false //Para saber si ya se hizo la pŕimera vez ya no se haga


        // Mostrar mensaje de alerta que vienen desde controlador
        document.addEventListener("DOMContentLoaded", function() {
            const message = '@Html.Raw(TempData["Message"])';
            const messageType = '@TempData["MessageType"]';
            const messageTitle = '@Html.Raw(TempData["MessageTitle"])';

            if (message) {
                Swal.fire({
                    title: messageTitle,
                    text: message,
                    icon: messageType,
                    confirmButtonText: "Aceptar"
                });
            }


            // Cuando el documento esté listo, bloquear los selects dependientes
            document.getElementById('estado').disabled = true;
            document.getElementById('municipio').disabled = true;
            document.getElementById('colonia').disabled = true;

            // Llamamos a la función que cuenta las solicitudes completadas  //nota: Los valores a guardar deben sere los del select
            const paisId = '@(Model.Domicilio?.idPais?.ToString() ?? "")';
            const estadoId = '@(Model.Domicilio?.idEstado?.ToString() ?? "")';
            const municipioId = '@(Model.Domicilio?.idMunicipio?.ToString() ?? "")';
            const coloniaId = '@(Model.Domicilio?.idColonia?.ToString() ?? "")';

            document.getElementById('pais').value = paisId;

            //EN ocaciones no se tiene algun select por loq ue no tenemos que buscarlo
            if(paisId == ""){
                totalRequests -= 3;  // Si no hay pais, no esperamos la respuesta de ninguno de los 3 selects
            } else if(estadoId == ""){
                totalRequests -= 2;  // Si no hay estado, no esperamos la respuesta de los municipios y colonias    
            } else if(municipioId == ""){
                totalRequests -= 1;  // Si no hay municipio, no esperamos la respuesta de las colonias
            }

            // Llamamos a la función que cuenta las solicitudes completadas
            comparadorRequestCounter()


            if (paisId !== "") {
                cargarEstados(paisId, estadoId, municipioId, coloniaId);
            }



            //Para datos medicos, que se jecute la funcion de cambio si la vairable tiene datos
            @(Model.Usuario?.DetalleMedicamentos != null ? "handleSelectChangeMedicamentos()" : "null");
            @(Model.Usuario?.DetalleAlergia != null ? "handleSelectChangeAlergias()" : "null");
            @(Model.Usuario?.DetalleEnfermedad != null ? "handleSelectChangeEnfermedades()" : "null");


        });


        function actualizarFechaMinima(campoFechaInicio) {
            // Encuentra el contenedor padre más cercano
            const contenedor = campoFechaInicio.closest('.col-md-12').parentElement;
            
            // Busca el input de fecha de fin dentro del mismo contenedor
            const fechaTermino = contenedor.querySelector('.fecha-termino');
            
            if (fechaTermino) {
                // Configura el atributo min de la fecha de fin
                fechaTermino.min = campoFechaInicio.value;
            }
        }
            

        // Comparar el valor que viene de del controlador para saber a que seccion ir
        @if ((TempData["Pagina"] as string) == "DatosMedicos")
        {
            <text>
                activarSeccion("#collapseTwo");
                seccionActualId = "collapseTwo";
            </text>
        }
        else if ((TempData["Pagina"] as string) == "Idiomas")
        {
            <text>
                activarSeccion("#collapseThree");
                seccionActualId = "collapseThree";
            </text>
        }
        else if ((TempData["Pagina"] as string) == "DocumentacionIngreso")
        {
            <text>
                activarSeccion("#collapseFour");
                seccionActualId = "collapseFour";
            </text>
        }
        else if ((TempData["Pagina"] as string) == "DocumentacionExpediente")
        {
            <text>
                activarSeccion("#collapseFourFive");
                seccionActualId = "collapseFourFive";
            </text>
        }
        else if ((TempData["Pagina"] as string) == "DatosAcademicos")
        {
            <text>
                activarSeccion("#collapseFive");
                seccionActualId = "collapseFive";
            </text>
        }
        else if ((TempData["Pagina"] as string) == "ExperienciasLaborales")
        {
            <text>
                activarSeccion("#collapseSix");
                seccionActualId = "collapseSix";
            </text>
        }
        else if ((TempData["Pagina"] as string) == "DatosSocioeconomicos")
        {
            <text>
                activarSeccion("#collapseSeven");
                seccionActualId = "collapseSeven";
            </text>
        }


    </script>

}
